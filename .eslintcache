[{"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\index.js":"1","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\App.js":"2","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\reportWebVitals.js":"3","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\store.js":"4","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\screens\\404\\404.jsx":"5","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\screens\\Loading\\Loading.jsx":"6","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\screens\\Admin\\Home.jsx":"7","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\screens\\Admin\\Dossier.jsx":"8","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\screens\\Admin\\Promoteur.jsx":"9","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\screens\\Admin\\Login.jsx":"10","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\screens\\Admin\\Account.jsx":"11","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\screens\\Admin\\Liste.jsx":"12","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\screens\\Admin\\Project.jsx":"13","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\screens\\Agent\\Dossier.jsx":"14","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\screens\\Admin\\DossierHistory.jsx":"15","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\screens\\Agent\\Login.jsx":"16","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\screens\\Agent\\DossierInfo.jsx":"17","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossiertTreatment\\DossiertTreatment.jsx":"18","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\index.jsx":"19","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\PromoteurTable\\PromoteurTable.jsx":"20","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\AccountsTable\\AccountsTable.jsx":"21","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\AccountsTable\\AddAccount.jsx":"22","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\ListeTable\\ListeTable.jsx":"23","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\ListeTable\\AddListe.jsx":"24","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\PromoteurTable\\AddPromoteur.jsx":"25","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\ProjectTable\\ProjectTable.jsx":"26","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\AddProject\\AddProject.jsx":"27","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossierHistoryTreat\\DossierHistoryTreat.jsx":"28","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossierInfo\\DossierInfoCompo.jsx":"29","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\reducers\\index.js":"30","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\HeaderMobile\\HeaderMobile.jsx":"31","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\Sidebar\\Sidebar.jsx":"32","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\Header\\Header.jsx":"33","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossierTable\\DossierTable.jsx":"34","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\screens\\Login\\Login.jsx":"35","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossierTable\\AddDossier.jsx":"36","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossiertTreatment\\FormVerification.jsx":"37","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossiertTreatment\\FormRevenue.jsx":"38","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossiertTreatment\\FormControl.jsx":"39","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossiertTreatment\\FormCf.jsx":"40","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossiertTreatment\\FormAff.jsx":"41","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\AgentDossierTable\\AgentDossierTable.jsx":"42","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\actions\\loadingAction.js":"43","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\types.js":"44","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossierHistoryTreat\\DossierInfo.jsx":"45","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossierHistoryTreat\\VerificationLogs.jsx":"46","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossierHistoryTreat\\RevenueLogs.jsx":"47","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossierHistoryTreat\\AffLogs.jsx":"48","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossierHistoryTreat\\ControleInfo.jsx":"49","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossierHistoryTreat\\CfLogs.jsx":"50","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\GeneralTable\\GeneralTable.jsx":"51","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\reducers\\loadingReducer.js":"52","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\FormLogin\\FormLogin.jsx":"53","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\actions\\types.js":"54","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\API\\API.js":"55","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\Utils\\Constants.js":"56","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\helpers\\ReplaceForNull.js":"57","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\helpers\\schemaExcel.js":"58"},{"size":500,"mtime":1610000064833,"results":"59","hashOfConfig":"60"},{"size":2994,"mtime":1609542056449,"results":"61","hashOfConfig":"60"},{"size":362,"mtime":499162500000,"results":"62","hashOfConfig":"60"},{"size":583,"mtime":1610000187610,"results":"63","hashOfConfig":"60"},{"size":797,"mtime":1596129039000,"results":"64","hashOfConfig":"60"},{"size":1879,"mtime":1596129039000,"results":"65","hashOfConfig":"60"},{"size":302,"mtime":1610001055387,"results":"66","hashOfConfig":"60"},{"size":1336,"mtime":1610001065461,"results":"67","hashOfConfig":"60"},{"size":596,"mtime":1608494446385,"results":"68","hashOfConfig":"60"},{"size":1186,"mtime":1609999868019,"results":"69","hashOfConfig":"60"},{"size":583,"mtime":1608494446379,"results":"70","hashOfConfig":"60"},{"size":549,"mtime":1608494446382,"results":"71","hashOfConfig":"60"},{"size":573,"mtime":1608494446384,"results":"72","hashOfConfig":"60"},{"size":839,"mtime":1610001045481,"results":"73","hashOfConfig":"60"},{"size":682,"mtime":1608874207273,"results":"74","hashOfConfig":"60"},{"size":1224,"mtime":1609999868019,"results":"75","hashOfConfig":"60"},{"size":644,"mtime":1609542331390,"results":"76","hashOfConfig":"60"},{"size":8301,"mtime":1609999868025,"results":"77","hashOfConfig":"60"},{"size":1587,"mtime":1610001148821,"results":"78","hashOfConfig":"60"},{"size":1260,"mtime":1608915996889,"results":"79","hashOfConfig":"60"},{"size":1020,"mtime":1608494446357,"results":"80","hashOfConfig":"60"},{"size":3235,"mtime":1609999927065,"results":"81","hashOfConfig":"60"},{"size":6845,"mtime":1609999868019,"results":"82","hashOfConfig":"60"},{"size":4772,"mtime":1609999868019,"results":"83","hashOfConfig":"60"},{"size":4422,"mtime":1610001186716,"results":"84","hashOfConfig":"60"},{"size":7255,"mtime":1610001378188,"results":"85","hashOfConfig":"60"},{"size":4531,"mtime":1609999927061,"results":"86","hashOfConfig":"60"},{"size":6013,"mtime":1609999927062,"results":"87","hashOfConfig":"60"},{"size":1603,"mtime":1609543014850,"results":"88","hashOfConfig":"60"},{"size":152,"mtime":1608851121146,"results":"89","hashOfConfig":"60"},{"size":1012,"mtime":1596129039000,"results":"90","hashOfConfig":"60"},{"size":5710,"mtime":1610001170086,"results":"91","hashOfConfig":"60"},{"size":1555,"mtime":1609999868057,"results":"92","hashOfConfig":"60"},{"size":9087,"mtime":1610000066972,"results":"93","hashOfConfig":"60"},{"size":3363,"mtime":1610001027786,"results":"94","hashOfConfig":"60"},{"size":15009,"mtime":1610000065843,"results":"95","hashOfConfig":"60"},{"size":8738,"mtime":1609999868020,"results":"96","hashOfConfig":"60"},{"size":4758,"mtime":1610000072872,"results":"97","hashOfConfig":"60"},{"size":7180,"mtime":1609999868020,"results":"98","hashOfConfig":"60"},{"size":5844,"mtime":1609999868020,"results":"99","hashOfConfig":"60"},{"size":6965,"mtime":1609999868025,"results":"100","hashOfConfig":"60"},{"size":11440,"mtime":1609999927062,"results":"101","hashOfConfig":"60"},{"size":145,"mtime":1596129039000,"results":"102","hashOfConfig":"60"},{"size":219,"mtime":1608494446385,"results":"103","hashOfConfig":"60"},{"size":1271,"mtime":1608874675222,"results":"104","hashOfConfig":"60"},{"size":4635,"mtime":1609087826223,"results":"105","hashOfConfig":"60"},{"size":3126,"mtime":1609087815339,"results":"106","hashOfConfig":"60"},{"size":3343,"mtime":1609088548542,"results":"107","hashOfConfig":"60"},{"size":4413,"mtime":1609088014412,"results":"108","hashOfConfig":"60"},{"size":3692,"mtime":1609088494982,"results":"109","hashOfConfig":"60"},{"size":9234,"mtime":1609999868019,"results":"110","hashOfConfig":"60"},{"size":396,"mtime":1610001102831,"results":"111","hashOfConfig":"60"},{"size":5483,"mtime":1609999898906,"results":"112","hashOfConfig":"60"},{"size":34,"mtime":1608851101776,"results":"113","hashOfConfig":"60"},{"size":381,"mtime":1610000436907,"results":"114","hashOfConfig":"60"},{"size":47,"mtime":1609999472777,"results":"115","hashOfConfig":"60"},{"size":132,"mtime":1609999961585,"results":"116","hashOfConfig":"60"},{"size":939,"mtime":1610000033551,"results":"117","hashOfConfig":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"o6ooda",{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"120"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"164","usedDeprecatedRules":"120"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"167","usedDeprecatedRules":"120"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"120"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"173","messages":"174","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"175","messages":"176","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"177","usedDeprecatedRules":"120"},{"filePath":"178","messages":"179","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"120"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"120"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"190","messages":"191","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"192","usedDeprecatedRules":"120"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"195","usedDeprecatedRules":"120"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"198","messages":"199","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"120"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"120"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"120"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"120"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"212","usedDeprecatedRules":"120"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"120"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"120"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"120"},{"filePath":"238","messages":"239","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"240","messages":"241","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"242","usedDeprecatedRules":"120"},{"filePath":"243","messages":"244","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"245","messages":"246","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"247","messages":"248","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"249","messages":"250","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},{"filePath":"251","messages":"252","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"120"},"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\index.js",[],["253","254"],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\App.js",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\reportWebVitals.js",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\store.js",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\screens\\404\\404.jsx",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\screens\\Loading\\Loading.jsx",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\screens\\Admin\\Home.jsx",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\screens\\Admin\\Dossier.jsx",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\screens\\Admin\\Promoteur.jsx",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\screens\\Admin\\Login.jsx",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\screens\\Admin\\Account.jsx",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\screens\\Admin\\Liste.jsx",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\screens\\Admin\\Project.jsx",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\screens\\Agent\\Dossier.jsx",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\screens\\Admin\\DossierHistory.jsx",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\screens\\Agent\\Login.jsx",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\screens\\Agent\\DossierInfo.jsx",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossiertTreatment\\DossiertTreatment.jsx",["255"],"import React,{useEffect,useState} from 'react';\r\nimport { Button, Dropdown,TransitionablePortal,Segment, Icon } from \"semantic-ui-react\";\r\nimport \"./DossiertTreatment.css\";\r\nimport Index from \"../index\";\r\nimport FormVerification from \"./FormVerification\";\r\nimport API from '../../API/API.js';\r\nimport { useHistory } from 'react-router-dom';\r\nimport FormRevenue from './FormRevenue';\r\nimport FormControl from './FormControl';\r\nimport FormCf from './FormCf';\r\nimport FormAff from './FormAff';\r\n\r\n\r\nconst DossiertTreatment = (props)=>{\r\n    const history = useHistory();\r\n    const [dossier,setDossier] = useState(null);\r\n    const [activeItem,setActiveItem] = useState(\"Vérification\");\r\n    const [disableDebut,setDisableDebut] = useState(false);\r\n    const [disableEnd,setDisableEnd] = useState(false);\r\n    const [code,setCode] = useState(0);\r\n    const [show,setShow] = useState(false);\r\n    const [start,setStart] = useState(false);\r\n    const options = [\r\n        {\r\n            key:0,\r\n            value:\"Vérification\",\r\n            text:\"Vérification\"\r\n        },\r\n        {\r\n            key:2,\r\n            value:\"Revenue\",\r\n            text:\"Revenue\"\r\n        },\r\n        {\r\n            key:3,\r\n            value:\"Controle\",\r\n            text:\"Controle\"\r\n        },\r\n        {\r\n            key:4,\r\n            value:\"Cf\",\r\n            text:\"Cf\"\r\n        },\r\n        {\r\n            key:5,\r\n            value:\"Affiliation\",\r\n            text:\"Affiliation\"\r\n        },\r\n        \r\n    ]\r\n    //? get dossier info\r\n    useEffect(()=>{\r\n        props.location.state && setDossier(props.location.state.dossier);\r\n    },[props.location.state])\r\n\r\n\r\n    //? get if date debut and date_fin already exist\r\n    useEffect(()=>{\r\n        dossier && API.get(`/api/dossier/${dossier.id}`)\r\n        .then(res=>{\r\n            switch (code) {\r\n                case 0:\r\n                    res.data.date_debut_verification && setDisableDebut(true);\r\n                    res.data.date_fin_verification && setDisableEnd(true);\r\n                    break;\r\n                case 1:\r\n                    res.data.date_debut_verification_reserve && setDisableDebut(true);\r\n                    res.data.date_fin_verification_reserve && setDisableEnd(true);\r\n                    break;      \r\n                case 2:\r\n                    res.data.date_debut_revenue && setDisableDebut(true);\r\n                    res.data.date_fin_revenue && setDisableEnd(true);\r\n                    break;  \r\n                case 3:\r\n                    res.data.date_debut_ctrl && setDisableDebut(true);\r\n                    res.data.date_fin_ctrl && setDisableEnd(true);\r\n                    break;\r\n                case 4:\r\n                    res.data.date_debut_cf && setDisableDebut(true);\r\n                    res.data.date_fin_cf && setDisableEnd(true);\r\n                    break;\r\n                case 5:\r\n                    res.data.date_debut_aff && setDisableDebut(true);\r\n                    res.data.date_fin_aff && setDisableEnd(true);\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n            setStart(true);\r\n        })\r\n        .catch(err=>{\r\n            console.log(err.response);\r\n            return history.push(\"/error\");\r\n\r\n        })\r\n    },[code,dossier])\r\n\r\n    const handleTypeTreatement = (e,{value})=>{\r\n        setActiveItem(value);\r\n        handleType(value);\r\n        setDisableDebut(false);\r\n        setDisableEnd(false);\r\n    }\r\n    const handleType = (choice)=>{\r\n        switch (choice) {\r\n            case \"Vérification\":\r\n                setCode(0);\r\n                break;\r\n            case \"Réserves vérification\":\r\n                setCode(1);\r\n                break;\r\n            case \"Revenue\":\r\n                setCode(2);\r\n                break;\r\n            case \"Controle\":\r\n                setCode(3);\r\n                break;\r\n            case \"Cf\":\r\n                setCode(4);\r\n                break;\r\n            case \"Affiliation\":\r\n                setCode(5);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const getBody = (type)=>{\r\n            //? begin 0\r\n            //? end 1\r\n            const date_now = new Date();           \r\n            switch (code) {\r\n                case 0:\r\n                    return type === 0 ? {date_debut_verification: date_now}  : {date_fin_verification: date_now}\r\n                case 1:\r\n                    return type === 0 ? {date_debut_verification_reserve: date_now}  : {date_fin_verification_reserve: date_now}\r\n                case 2:\r\n                    return type === 0 ? {date_debut_revenue: date_now}  : {date_fin_revenue: date_now}\r\n                case 3:\r\n                    return type === 0 ? {date_debut_ctrl: date_now}  : {date_fin_ctrl: date_now}\r\n                case 4:\r\n                    return type === 0 ? {date_debut_cf: date_now}  : {date_fin_cf: date_now}\r\n                case 5:\r\n                    return type === 0 ? {date_debut_aff: date_now}  : {date_fin_aff: date_now}\r\n                default:\r\n                    break;\r\n            }\r\n    }\r\n\r\n    const handleDateStep = (e)=>{\r\n        const name = e.currentTarget.attributes[\"date-id\"].value;\r\n        switch (name) {\r\n            //? begin 0\r\n            //? end 1\r\n            case \"begin\":\r\n                updateDateStep(getBody(0),0);\r\n                break;\r\n            case \"end\":\r\n                updateDateStep(getBody(1),1);\r\n                break;\r\n        \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const updateDateStep = (body,type)=>{\r\n        API.put(`/api/dossier/${dossier.id}`,body)\r\n        .then(res=>{\r\n            if (type === 0){\r\n                setDisableDebut(true);\r\n            } else if (type === 1){\r\n                setDisableEnd(true);\r\n            }\r\n            setShow(true);\r\n            setTimeout(()=>{\r\n                setShow(false);\r\n            },2000)\r\n        })\r\n        .catch(err=>{\r\n            console.log(err.response);\r\n            return history.push(\"/error\");\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {\r\n            start ?     \r\n            <Index title=\"Traitement dossier\" owner={1}  active=\"dossiers\" >\r\n            <div className=\"projet_sip\">\r\n               <div className=\"header_table\">\r\n                   \r\n                    <TransitionablePortal\r\n                   open={show}\r\n                   onClose={()=>setShow(false)}\r\n               >\r\n                   <Segment className=\"modal-date\"\r\n       >\r\n         <h1>Succès <Icon name=\"check circle\" /> </h1>\r\n         <p>Date {activeItem} ajouté avec succès</p>\r\n       </Segment>\r\n               </TransitionablePortal>\r\n                   <div className=\"row treat\">\r\n                       <div className=\"dropdown_date\">\r\n                           <Dropdown onChange={handleTypeTreatement} value={activeItem} size=\"big\" label=\"Projet\" selection options={options} />\r\n                           <div className=\"date_treat\">\r\n                               <Button disabled={disableDebut} onClick={handleDateStep} content=\"Debut\" id=\"debut\" date-id=\"begin\"  />\r\n                               <Button disabled={disableEnd} onClick={handleDateStep} content=\"Fin\" date-id=\"end\" />\r\n                           </div>\r\n                       </div>\r\n                   {code === 0 && <FormVerification dossierId={dossier.id} end={disableEnd} start={disableDebut}/> }\r\n                   {\r\n                       code === 2 && <FormRevenue dossierId={dossier.id} end={disableEnd} start={disableDebut} />\r\n                   }\r\n                    {\r\n                        code === 3 && <FormControl  dossierId={dossier.id} end={disableEnd} start={disableDebut}/>\r\n                    }\r\n                    {\r\n                        code === 4 && <FormCf dossierId={dossier.id} end={disableEnd} start={disableDebut} />\r\n                    }\r\n                     {\r\n                        code === 5 && <FormAff dossierId={dossier.id} end={disableEnd} start={disableDebut} />\r\n                    }\r\n                   </div>\r\n               </div>\r\n           </div>\r\n       </Index>\r\n    :null\r\n        }\r\n        </>\r\n    )\r\n}\r\nexport default DossiertTreatment;\r\n","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\index.jsx",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\PromoteurTable\\PromoteurTable.jsx",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\AccountsTable\\AccountsTable.jsx",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\AccountsTable\\AddAccount.jsx",["256","257"],"import React,{useState,useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Form, Message } from \"semantic-ui-react\";\r\nimport API from '../../API/API.js/API.js';\r\n\r\nconst AddAccount = ()=>{\r\n    const history = useHistory();\r\n    const [username,setUsername] = useState(\"\");\r\n    const [password,setPassword] = useState(\"\");\r\n    const [password2,setPassword2] = useState(\"\");\r\n    const [email,setEmail] = useState(\"\");\r\n    const [loadingBtn,setLoadingBtn] = useState(false);\r\n    const [success,setSuccess] = useState(null);\r\n\r\n    //? handle input changes\r\n    const handleInput = (e,{name,value})=>{\r\n        setSuccess(null);\r\n        switch (name) {\r\n            case \"username\":\r\n                setUsername(value);\r\n                break;\r\n            case \"email\":\r\n                setEmail(value);\r\n                break;\r\n            case \"password\":\r\n                setPassword(value);\r\n                break;\r\n            case \"password2\":\r\n                setPassword2(value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    //? add project \r\n    const handleAddPromoteur = ()=>{\r\n        if (password !== password2){\r\n            return setSuccess(false);\r\n        }\r\n        setLoadingBtn(true);\r\n        const body = {\r\n            username,\r\n            email,\r\n            password,\r\n        }\r\n        API.post(\"/api/auth/register\",body)\r\n        .then(res=>{\r\n            console.log(res);\r\n            setSuccess(true);\r\n            setLoadingBtn(false);\r\n        })\r\n        .catch(err=>{\r\n            console.log(err.response);\r\n            setSuccess(false);\r\n            setLoadingBtn(false);\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"projet_sip add_project\">\r\n            <div className=\"header_table\">\r\n                <div className=\"row\">\r\n                    <Form error={!success} className=\"form_add_project\">\r\n                        <Form.Group>\r\n                            <Form.Input value={username} onChange={handleInput} size=\"big\" name=\"username\" label=\"Nom d'utilisateur\" />\r\n                            <Form.Input onChange={handleInput} size=\"big\" name=\"email\" label='Email' value={email} />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                        <Form.Input value={password} onChange={handleInput} size=\"big\" type=\"password\" name=\"password\" label='Mot de passe' />\r\n                        <Form.Input value={password2} onChange={handleInput} size=\"big\" type=\"password\" name=\"password2\" label='Confimation Mot de passe' />\r\n                        </Form.Group>\r\n                        <Form.Button loading={loadingBtn} className=\"actions\" content=\"Confirmer\" onClick={handleAddPromoteur} />\r\n                        <div className=\"message_project\">\r\n                        {success === false && <Message  error={!success} content='Veuillez remplir tous les champs obligatoires'  />}\r\n                        { success &&  <Message  color='green ' content='Compte ajouté avec succée'  />}\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AddAccount;\r\n","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\ListeTable\\ListeTable.jsx",["258","259","260","261"],"import React,{useState,useEffect} from 'react';\r\nimport { Input, Button,Pagination,Table,Icon } from \"semantic-ui-react\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nimport moment from 'moment'\r\nimport 'moment/locale/fr';  \r\n\r\n//? redux \r\nimport { setLoading } from \"../../actions/loadingAction\";\r\n\r\nimport {ReactComponent as ArrowSvg} from \"../../assets/icons/arrow.svg\";\r\nimport LoadingPage from \"../../screens/Loading/Loading\";\r\nimport API from '../../API/API.js';\r\n\r\nconst Arrow = (props)=>{\r\n    const {isRight,status,onClick} = props;\r\n\r\n    const handleClick = ()=>{\r\n        if (status){\r\n            onClick(isRight)\r\n        }\r\n    }\r\n    return (\r\n        <div className={isRight?status?\"arrow_ right\":\"arrow_ right gray\":status?\"arrow_ left\":\"arrow_ left gray\"} onClick={handleClick} >\r\n            <ArrowSvg />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ListeTable = (props)=>{\r\n    moment.locale('fr');\r\n\r\n    const history = useHistory();\r\n    const [loaded,setLoaded] = useState(false);\r\n    const [data,setData] = useState([]);\r\n    const [searchField,setSearchField] = useState(\"\");\r\n    const [page,setPage] = useState(0);\r\n    const [limit,setLimit] = useState(6);\r\n    const [totalPages,setTotalPages] = useState(null);\r\n    const [isNext,setIsNext] = useState(null);\r\n    const [isPrev,setIsPrev] = useState(null);\r\n    const [activeItem,setActiveItem] = useState(\"in progress\");\r\n    const [searchBtn,setSearchBtn] = useState(false);\r\n    const [loadingBtn,setLoadingBtn] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        setLoading(true);\r\n        searchBtn && setLoadingBtn(true);\r\n        API.get(`/api/liste/all?size=${limit}&page=${page}&search=${searchField}&ordering=-createdAt`)\r\n        .then(res=>{\r\n            console.log(res);\r\n            setData(res.data.results);\r\n            setPage(res.data.currentPage);\r\n            setTotalPages(res.data.totalPages);\r\n            if (res.data.count>res.data.currentPage+limit){\r\n                setIsNext(res.data.currentPage+1)\r\n            }else{\r\n                setIsNext(null);\r\n            }\r\n            if (res.data.currentPage === 0){\r\n                setIsPrev(null)\r\n            }else setIsPrev(res.data.currentPage)\r\n            setSearchBtn(false);\r\n            searchBtn && setLoadingBtn(false);\r\n            setTimeout(()=>{\r\n                setLoaded(true);\r\n            },500)\r\n        })\r\n        .catch(err=>{\r\n            searchBtn && setLoadingBtn(false);\r\n            setSearchBtn(false);\r\n            return history.push('/error')\r\n        })\r\n    },[page,searchBtn,history])\r\n    const handlePagination = (isRight)=>{\r\n          if (isRight){\r\n            setPage(isNext);\r\n          }\r\n          else {\r\n              setPage(isPrev)\r\n          }\r\n    }\r\n    const handlePaginationChange = (e, { activePage })=>{\r\n        setPage(activePage-1)\r\n    }\r\n    const handleInputSearch = (e,{name,value})=>{\r\n        setSearchField(value)\r\n    }\r\n    const handleSearch = ()=>{\r\n        setSearchBtn(true);\r\n    }\r\n    const handleAddListe = ()=>{\r\n        history.push(\"/admin/add/liste\")\r\n    }\r\n\r\n    return (\r\n        (\r\n            <>\r\n            {\r\n                loaded ?(\r\n                    <div className=\"projet_sip\">\r\n                <div className=\"header_table\">\r\n                    <div className=\"row\">\r\n                        <div className=\"search_part\">\r\n                        <Input icon='search' name=\"search_input\" value={searchField} onChange={handleInputSearch} iconPosition='left' placeholder='Rechercher par Réference, type ou intitulé du projet ...' />\r\n                        <Button loading={loadingBtn} content=\"Recherche\" onClick={handleSearch} />\r\n                        <div className=\"pagination_part\">\r\n                        <Pagination\r\n                        onPageChange={handlePaginationChange}\r\n                        firstItem={null}\r\n                        lastItem={null}\r\n                        prevItem={{ content: <Arrow status={isPrev} onClick={handlePagination} />, icon: true }}\r\n                        nextItem={{ content: <Arrow status={isNext} isRight onClick={handlePagination} />, icon: true }}\r\n                        activePage={page+1}\r\n                        totalPages={totalPages}\r\n                        boundaryRange={0}\r\n                        siblingRange={0}\r\n                        />\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"search_part inverted\">\r\n                            <Button  content=\"Ajouter une liste\" onClick={handleAddListe} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"table_part\">\r\n                <Table basic>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                        <Table.HeaderCell width={2} className=\"first\">Réference<Icon  data-name=\"ref\" /> </Table.HeaderCell>\r\n                        <Table.HeaderCell width={2} className=\"first\">Projet<Icon  data-name=\"intitulé\" /> </Table.HeaderCell>\r\n                        <Table.HeaderCell width={2} className=\"first\">Date creation<Icon  data-name=\"createdAt\" /> </Table.HeaderCell>\r\n                        <Table.HeaderCell width={2} className=\"first\">Date accusé<Icon  data-name=\"date_accuse\" /> </Table.HeaderCell>\r\n                        <Table.HeaderCell width={2} className=\"first\">Numéro accusé<Icon  data-name=\"num_accuse\" /> </Table.HeaderCell>\r\n                        <Table.HeaderCell width={1} className=\"first\">Type<Icon  data-name=\"type\" /> </Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n                <Table.Body>\r\n                    {\r\n                        data.map((liste,index)=>\r\n                        <Table.Row key={index}>\r\n                            <Table.Cell>{liste.ref ? liste.ref :\"/\"}</Table.Cell>\r\n                            <Table.Cell>{liste.Project && liste.Project.intitulé ? liste.Project.intitulé : \"/\"}</Table.Cell>\r\n                            <Table.Cell>{moment(liste.createdAt).format('LL')}</Table.Cell>\r\n                            <Table.Cell>{liste.date_accuse ? moment(liste.date_accuse).format(\"LL\") : \"/\"}</Table.Cell>\r\n                            <Table.Cell>{liste.num_accuse ? liste.num_accuse : \"/\"}</Table.Cell>\r\n                            <Table.Cell>{liste.type ? liste.type : \"/\"}</Table.Cell>\r\n                    </Table.Row>\r\n                        )\r\n                    }\r\n                </Table.Body>\r\n                </Table>\r\n                </div>\r\n            </div>\r\n            \r\n                )\r\n                :\r\n                (\r\n                    <LoadingPage />\r\n                )\r\n            }\r\n            </>\r\n        )\r\n    )\r\n}\r\nexport default ListeTable;","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\ListeTable\\AddListe.jsx",["262"],"import React,{useState,useEffect} from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Form, Message } from \"semantic-ui-react\";\r\nimport API from '../../API/API.js';\r\n\r\nconst AddListe = ()=>{\r\n    const history = useHistory();\r\n    const [projects,setProjects] = useState([]);\r\n    const [ProjectId,setProjectId] = useState(null);\r\n    const [ref,setRef] = useState('');\r\n    const [date_accuse,setdate_accuse] = useState(null);\r\n    const [num_accuse,setnum_accuse] = useState(\"\");\r\n    const [type,settype] = useState(\"\");\r\n    const [nbr_postulant,setnbr_postulant] = useState(\"\");\r\n    const [loadingBtn,setLoadingBtn] = useState(false);\r\n    const [success,setSuccess] = useState(null);\r\n\r\n    //? GET Promoteurs\r\n    useEffect(()=>{\r\n        projects && projects.length>0 && setProjects([]);\r\n        API.get(\"/api/project?size=9999999999\")\r\n        .then(res=>{\r\n            res.data.results.map(project=>setProjects(prevState=>[...prevState,{\r\n                key:project.id,\r\n                text:project.intitulé,\r\n                value:project.id\r\n            }]))\r\n        })\r\n        .catch(err=>{\r\n            history.push(\"/error\");\r\n        })\r\n    },[]);\r\n\r\n    //? handle input changes\r\n    const handleInput = (e,{name,value})=>{\r\n        setSuccess(null);\r\n        switch (name) {\r\n            case \"ref\":\r\n                setRef(value);\r\n                break;\r\n            case \"date_accuse\":\r\n                setdate_accuse(value);\r\n                break;\r\n            case \"num_accuse\":\r\n                setnum_accuse(value);\r\n                break;\r\n            case \"type\":\r\n                settype(value);\r\n                break; \r\n            case \"nbr_postulant\":\r\n                setnbr_postulant(value);\r\n                break; \r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    //? handle promoteur dropdown\r\n    const handleChangePromoteur = (e,{value})=>{\r\n       setProjectId(value)\r\n    }\r\n\r\n    //? add project \r\n    const handleAddProject = ()=>{\r\n        setLoadingBtn(true);\r\n        const body = {\r\n            ProjectId,\r\n            ref,\r\n            num_accuse,\r\n            type,\r\n            date_accuse,\r\n            nbr_postulant:parseInt(nbr_postulant),\r\n        }\r\n        API.post(\"/api/liste\",body)\r\n        .then(res=>{\r\n            setSuccess(true);\r\n            setLoadingBtn(false);\r\n            setRef(\"\");\r\n            settype(\"\");\r\n            setnum_accuse(\"\");\r\n            setdate_accuse(\"\");\r\n            setnbr_postulant(\"\");\r\n        })\r\n        .catch(err=>{\r\n            console.log(err.response);\r\n            setSuccess(false);\r\n            setLoadingBtn(false);\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"projet_sip add_project\">\r\n            <div className=\"header_table\">\r\n                <div className=\"row\">\r\n                    <Form error={!success} className=\"form_add_project\">\r\n                        <Form.Group>\r\n                            <Form.Dropdown onChange={handleChangePromoteur} size=\"big\" label=\"Projet\" selection options={projects} />\r\n                            <Form.Input value={ref} onChange={handleInput} size=\"big\" name=\"ref\" label='Réference' />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Input onChange={handleInput} size=\"big\" name=\"type\" label='Type' value={type} />\r\n                            <Form.Input onChange={handleInput} size=\"big\" name=\"nbr_postulant\" label='Nombre de postulans' value={nbr_postulant} />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <div className=\"date_input\">\r\n                                <label>\r\n                                    Date accusé\r\n                                </label>\r\n                                <DatePicker selected={date_accuse} onChange={date => setdate_accuse(date)} />\r\n                            </div>\r\n                            <Form.Input onChange={handleInput} size=\"big\" name=\"num_accuse\" label='Numéro accusé' value={num_accuse} />\r\n                        </Form.Group>\r\n                        <Form.Button loading={loadingBtn} className=\"actions\" content=\"Confirmer\" onClick={handleAddProject} />\r\n                        <div className=\"message_project\">\r\n                        {success === false && <Message  error={!success} content='Veuillez remplir tous les champs obligatoires'  />}\r\n                        { success &&  <Message  color='green ' content='Liste ajouté avec succée'  />}\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AddListe;\r\n","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\PromoteurTable\\AddPromoteur.jsx",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\ProjectTable\\ProjectTable.jsx",["263"],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\AddProject\\AddProject.jsx",["264"],"import React,{useState,useEffect} from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Form, Message } from \"semantic-ui-react\";\r\nimport API from '../../API/API.js/API.js';\r\nimport \"./AddProject.css\";\r\n\r\nconst AddProject = ()=>{\r\n    const history = useHistory();\r\n    const [promoteurs,setPromoteurs] = useState([]);\r\n    const [PromoteurId,setPromoteurId] = useState(null);\r\n    const [code,setCode] = useState(\"\");\r\n    const [intitulé,setIntitule] = useState(\"\");\r\n    const [quota,setQuota] = useState(\"\");\r\n    const [site,setSite] = useState(\"\");\r\n    const [commune,setCommune] = useState(\"\");\r\n    const [loadingBtn,setLoadingBtn] = useState(false);\r\n    const [success,setSuccess] = useState(null);\r\n\r\n    //? GET Promoteurs\r\n    useEffect(()=>{\r\n        promoteurs && promoteurs.length>0 && setPromoteurs([]);\r\n        API.get(\"/api/promoteur/all?size=9999999999\")\r\n        .then(res=>{\r\n            res.data.results.map(promoteur=>setPromoteurs(prevState=>[...prevState,{\r\n                key:promoteur.id,\r\n                text:promoteur.first_name+\" \"+promoteur.last_name,\r\n                value:promoteur.id\r\n            }]))\r\n        })\r\n        .catch(err=>{\r\n            history.push(\"/error\");\r\n        })\r\n    },[]);\r\n\r\n    //? handle input changes\r\n    const handleInput = (e,{name,value})=>{\r\n        setSuccess(null);\r\n        switch (name) {\r\n            case \"code\":\r\n                setCode(value);\r\n                break;\r\n            case \"intitulé\":\r\n                setIntitule(value);\r\n                break;\r\n            case \"quota\":\r\n                setQuota(value);\r\n                break;\r\n            case \"site\":\r\n                setSite(value);\r\n                break;\r\n            case \"commune\":\r\n                setCommune(value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    //? handle promoteur dropdown\r\n    const handleChangePromoteur = (e,{value})=>{\r\n       setPromoteurId(value)\r\n    }\r\n\r\n    //? add project \r\n    const handleAddProject = ()=>{\r\n        setLoadingBtn(true);\r\n        const body = {\r\n            PromoteurId,\r\n            code:parseInt(code),\r\n            intitulé,\r\n            site,\r\n            commune,\r\n            quota:parseInt(quota)\r\n        }\r\n        API.post(\"/api/project\",body)\r\n        .then(res=>{\r\n            console.log(res);\r\n            setSuccess(true);\r\n            setLoadingBtn(false);\r\n            setCode(\"\");\r\n            setQuota(\"\");\r\n            setCommune(\"\");\r\n            setSite(\"\");\r\n            setIntitule(\"\");\r\n        })\r\n        .catch(err=>{\r\n            console.log(err.response);\r\n            setSuccess(false);\r\n            setLoadingBtn(false);\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"projet_sip add_project\">\r\n            <div className=\"header_table\">\r\n                <div className=\"row\">\r\n                    <Form error={!success} className=\"form_add_project\">\r\n                        <Form.Group>\r\n                            <Form.Dropdown onChange={handleChangePromoteur} size=\"big\" label=\"Promoteur\" selection options={promoteurs} />\r\n                            <Form.Input value={code} onChange={handleInput} size=\"big\" name=\"code\" label='Code' />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Input onChange={handleInput} size=\"big\" name=\"intitulé\" label='Intitulé' value={intitulé } />\r\n                            <Form.Input onChange={handleInput} size=\"big\" name=\"quota\" label='Quota' value={quota} />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Input onChange={handleInput} size=\"big\" name=\"site\" label='Site' value={site} />\r\n                            <Form.Input onChange={handleInput} size=\"big\" name=\"commune\" label='Commune' value={commune} />\r\n                        </Form.Group>\r\n                        <Form.Button loading={loadingBtn} className=\"actions\" content=\"Confirmer\" onClick={handleAddProject} />\r\n                        <div className=\"message_project\">\r\n                        {success === false && <Message  error={!success} content='Veuillez remplir tous les champs obligatoires'  />}\r\n                        { success &&  <Message  color='green ' content='Projet ajouté avec succée'  />}\r\n                        </div>\r\n                    </Form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AddProject;\r\n","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossierHistoryTreat\\DossierHistoryTreat.jsx",["265","266","267","268","269"],"import React,{useEffect,useState} from 'react';\r\nimport { Menu } from 'semantic-ui-react'\r\nimport API from '../../API/API.js/API.js';\r\nimport moment from 'moment'\r\nimport 'moment/locale/fr';  \r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport \"./DossierHistoryTreat.css\";\r\nimport DossierInfo from './DossierInfo';\r\nimport VerificationLogs from './VerificationLogs';\r\nimport RevenueLogs from './RevenueLogs';\r\nimport ControleInfo from './ControleInfo';\r\nimport CfLogs from './CfLogs';\r\nimport AffLogs from './AffLogs';\r\n\r\nconst DossierHistoryTreat = (props)=>{\r\n    moment.locale('fr');\r\n    const history = useHistory();\r\n    const [activeItem,setActiveItem] = useState(\"Information du dossier\")\r\n    const {dossier} = props;\r\n    const [transmition,setTransmition] = useState({});\r\n    const [dossierData,setDossierData] = useState({});\r\n    const [verificationData,setVerificationData] = useState([]);\r\n    const [revenueData,setRevenueData] = useState([]);\r\n    const [controleData,setControleData] = useState([]);\r\n    const [cfData,setCfData] = useState([]);\r\n    const [affData,setAffData] = useState([]);\r\n    \r\n\r\n    const handleItemClick = (e, { name }) => setActiveItem(name)\r\n\r\n    useEffect(()=>{\r\n        if (dossier){\r\n           dossier.Transmition && setTransmition(\r\n                {\r\n                    date:dossier.Transmition.date,\r\n                    agent:dossier.Transmition.Agent.username\r\n                }\r\n            );\r\n            dossier.Postulant && dossier.Conjoint && setDossierData(\r\n                {\r\n                    postulant:dossier.Postulant.first_name+\" \"+dossier.Postulant.last_name,\r\n                    conjoint:dossier.Conjoint[0].first_name+\" \"+dossier.Conjoint[0].last_name,\r\n                    place:dossier.Postulant.place_of_birth,\r\n                    family_situation:dossier.Postulant.family_situation,\r\n                    date_debut_verification: dossier.date_debut_verification ? (dossier.date_debut_verification) : null,\r\n                    date_fin_verification:dossier.date_fin_verification ? (dossier.date_fin_verification) : null\r\n                }\r\n            )\r\n        }\r\n    },[dossier])\r\n\r\n    //? get all data ordered by date\r\n    useEffect(()=>{\r\n        dossier && dossier.id && API.get(`/api/verification?dossierId=${dossier.id}&ordering=createdAt&limit=9999999999999999999999999999999999`)\r\n        .then(res=>{\r\n            setVerificationData(res.data.results);\r\n        })\r\n        .catch(err=>{\r\n            history.push(\"/error\")\r\n        })\r\n    },[dossier])\r\n\r\n\r\n    useEffect(()=>{\r\n        dossier && dossier.id && API.get(`/api/revenue_rejet?dossierId=${dossier.id}&ordering=createdAt&limit=9999999999999999999999999999999999`)\r\n        .then(res=>{\r\n            setRevenueData(res.data.results);\r\n        })\r\n        .catch(err=>{\r\n            history.push(\"/error\")\r\n        })\r\n    },[dossier])\r\n\r\n    useEffect(()=>{\r\n        dossier && dossier.id && API.get(`/api/control_rejet?dossierId=${dossier.id}&ordering=createdAt&limit=9999999999999999999999999999999999`)\r\n        .then(res=>{\r\n            setControleData(res.data.results);\r\n        })\r\n        .catch(err=>{\r\n            history.push(\"/error\")\r\n        })\r\n    },[dossier])\r\n\r\n    useEffect(()=>{\r\n        dossier && dossier.id && API.get(`/api/cf_rejet?dossierId=${dossier.id}&ordering=createdAt&limit=9999999999999999999999999999999999`)\r\n        .then(res=>{\r\n            setCfData(res.data.results);\r\n        })\r\n        .catch(err=>{\r\n            history.push(\"/error\")\r\n        })\r\n    },[dossier])\r\n    \r\n    useEffect(()=>{\r\n        dossier && dossier.id && API.get(`/api/aff_rejet?dossierId=${dossier.id}&ordering=createdAt&limit=9999999999999999999999999999999999`)\r\n        .then(res=>{\r\n            setAffData(res.data.results);\r\n        })\r\n        .catch(err=>{\r\n            history.push(\"/error\")\r\n        })\r\n    },[dossier])\r\n\r\n    console.log({dossier})\r\n\r\n    return (\r\n        <div className=\"historyDossier\">\r\n           <div className=\"menuDossier\">\r\n        <Menu pointing secondary>\r\n          <Menu.Item\r\n            name='Information du dossier'\r\n            active={activeItem === 'Information du dossier'}\r\n            onClick={handleItemClick}\r\n          />\r\n          <Menu.Item\r\n            name='Vérification'\r\n            active={activeItem === 'Vérification'}\r\n            onClick={handleItemClick}\r\n          />\r\n          <Menu.Item\r\n            name='Revenue'\r\n            active={activeItem === 'Revenue'}\r\n            onClick={handleItemClick}\r\n          />\r\n          <Menu.Item\r\n              name='Controle'\r\n              active={activeItem === 'Controle'}\r\n              onClick={handleItemClick}\r\n            />\r\n            <Menu.Item\r\n              name='cf'\r\n              active={activeItem === 'cf'}\r\n              onClick={handleItemClick}\r\n            />\r\n            <Menu.Item\r\n              name='Affiliation'\r\n              active={activeItem === 'Affiliation'}\r\n              onClick={handleItemClick}\r\n            />\r\n        </Menu>\r\n        {\r\n                activeItem === \"Information du dossier\" && \r\n                <DossierInfo dossierData={dossierData} transmition={transmition} />\r\n        }\r\n        {\r\n                activeItem === \"Vérification\" &&\r\n                <VerificationLogs dossierData={dossierData} verificationData={verificationData} />\r\n        }\r\n        {\r\n            activeItem === \"Revenue\" &&\r\n            <RevenueLogs revenueData={revenueData} dossier={dossier} />\r\n        }\r\n        {\r\n            activeItem === \"Controle\" &&\r\n            <ControleInfo controleData={controleData} dossier={dossier} />\r\n        }\r\n        {\r\n            activeItem === \"cf\" &&\r\n            <CfLogs cfData={cfData} dossier={dossier} />\r\n        }\r\n        {\r\n            activeItem === \"Affiliation\" &&\r\n            <AffLogs affData={affData} dossier={dossier} />\r\n        }\r\n            </div>\r\n            \r\n          </div>\r\n    )\r\n}\r\n\r\nexport default DossierHistoryTreat;","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossierInfo\\DossierInfoCompo.jsx",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\reducers\\index.js",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\HeaderMobile\\HeaderMobile.jsx",["270"],"import React,{useState} from 'react';\nimport { Icon,Image } from \"semantic-ui-react\";\n\n//? import css\nimport \"./HeaderMobile.css\";\n\nimport Img from \"../../assets/img.jpg\";\n\nexport default function HeaderMobile(props) {\n    const {isOpen,setIsOpen} = props;\n    const handleOpen = ()=>{\n        setIsOpen(prevState=>!prevState);\n    }\n    return (\n        <div className=\"header_mobile\">\n            <div className=\"row\">\n                <div className=\"left_part\">\n                    <Image src={Img} alt=\"profile picture\" />\n                    <div className=\"texts\">\n                    <h2>George John</h2>\n                    <p>Ministère</p>\n                    </div>\n                </div>\n                <div className=\"right_part\">\n                    <Icon name=\"search\" />\n                    <div className={isOpen?\"nav-icon opened\":\"nav-icon\"} onClick={handleOpen} >\n                        <div></div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\Sidebar\\Sidebar.jsx",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\Header\\Header.jsx",["271","272","273","274"],"import React,{ useState } from 'react';\r\nimport {Button,Icon, Input} from \"semantic-ui-react\"\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\n//? import css\r\nimport \"./Header.css\";\r\n\r\n//? redux \";\r\nimport { connect } from \"react-redux\";\r\nimport API from '../../API/API.js';\r\n\r\nconst Header = (props) => {\r\n    const { title,owner } = props;\r\n    const history = useHistory();\r\n\r\n\r\n    //? for handling searchBar\r\n    const [isOpen,setOpen] = useState(false);\r\n    const [inputRef,setInputRef] = useState();\r\n\r\n    const handleSearch = ()=> {\r\n        inputRef.focus();\r\n        setOpen(prevState=>!prevState);\r\n    }\r\n    const Logout = ()=>{\r\n        API.get(\"/api/auth/logout\")\r\n        .then(res=>{\r\n            localStorage.clear();\r\n            owner === 0 ?  history.push(\"/admin/login\") :  history.push(\"/agent/login\");\r\n        })\r\n        .catch(err=>{\r\n            console.log(err.response);\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"header_sip\">\r\n            <div className=\"row\">\r\n                <h1>{title}</h1>\r\n                <div className=\"right_part\">\r\n                <div className=\"search_box\">\r\n                </div>\r\n                <Button icon labelPosition='left' onClick={Logout}>\r\n                        Se Deconnecter\r\n                        <Icon name='left log out' />\r\n                    </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nHeader.propTypes = {\r\n};\r\nconst mapStateToProps = (state) => ({\r\n});\r\n\r\nexport default connect(mapStateToProps, {  })(Header);\r\n","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossierTable\\DossierTable.jsx",["275","276","277"],"import React,{useState,useEffect} from 'react';\r\nimport { Input, Button,Pagination,Table,Icon, Segment } from \"semantic-ui-react\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nimport moment from 'moment'\r\nimport 'moment/locale/fr';  \r\n\r\n//? redux \r\nimport { setLoading } from \"../../actions/loadingAction\";\r\n\r\nimport {ReactComponent as ArrowSvg} from \"../../assets/icons/arrow.svg\";\r\nimport LoadingPage from \"../../screens/Loading/Loading\";\r\nimport API from '../../API/API.js';\r\n\r\nconst Arrow = (props)=>{\r\n    const {isRight,status,onClick} = props;\r\n\r\n    const handleClick = ()=>{\r\n        if (status){\r\n            onClick(isRight)\r\n        }\r\n    }\r\n    return (\r\n        <div className={isRight?status?\"arrow_ right\":\"arrow_ right gray\":status?\"arrow_ left\":\"arrow_ left gray\"} onClick={handleClick} >\r\n            <ArrowSvg />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst DossierTable = (props)=>{\r\n    moment.locale('fr');\r\n\r\n    const history = useHistory();\r\n    const [loaded,setLoaded] = useState(false);\r\n    const [data,setData] = useState([]);\r\n    const [searchField,setSearchField] = useState(\"\");\r\n    const [page,setPage] = useState(0);\r\n    const [limit,setLimit] = useState(6);\r\n    const [totalPages,setTotalPages] = useState(null);\r\n    const [isNext,setIsNext] = useState(null);\r\n    const [isPrev,setIsPrev] = useState(null);\r\n    const [searchBtn,setSearchBtn] = useState(false);\r\n    const [loadingBtn,setLoadingBtn] = useState(false);\r\n    const [loadingTable,setLoadingTable] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        setLoadingTable(true);\r\n        setData([]);\r\n        setLoading(true);\r\n        searchBtn && setLoadingBtn(true);\r\n        API.get(`/api/dossier?size=${limit}&page=${page}&search=${searchField}&ordering=-createdAt`)\r\n        .then(res=>{\r\n            res.data.results.map((dossier,index)=>{\r\n                API.get(`/api/conjoint?PostulantId=${dossier.Postulant.id}`)\r\n                .then(res=>{\r\n                    const conjoints = res.data.results;\r\n                   API.get(`/api/transmition?DossierId=${dossier.id}`)\r\n                   .then(res=>{\r\n                    if (index===0){\r\n                        setData([{Conjoint:conjoints,...dossier,Transmition:res.data.results[0]}]);\r\n\r\n                    }else{\r\n                        setData((prevState=>[...prevState,{Conjoint:conjoints,...dossier,Transmition:res.data.results[0]}]));\r\n                    }\r\n                    setLoadingTable(false);\r\n                })\r\n                   .catch(err=>{\r\n                       console.log(err.response);\r\n                       setLoadingTable(false);\r\n                   })\r\n                })\r\n                .catch(err=>{\r\n                        console.log(err.response);\r\n                        setLoadingTable(false);\r\n                })\r\n\r\n            })\r\n            setPage(res.data.currentPage);\r\n            setTotalPages(res.data.totalPages);\r\n            if (res.data.count>res.data.currentPage+limit){\r\n                setIsNext(res.data.currentPage+1)\r\n            }else{\r\n                setIsNext(null);\r\n            }\r\n            if (res.data.currentPage === 0){\r\n                setIsPrev(null)\r\n            }else setIsPrev(res.data.currentPage)\r\n            setSearchBtn(false);\r\n            searchBtn && setLoadingBtn(false);\r\n            setLoadingTable(false);\r\n            setTimeout(()=>{\r\n                setLoaded(true);\r\n            },500)\r\n        })\r\n        .catch(err=>{\r\n            searchBtn && setLoadingBtn(false);\r\n            setSearchBtn(false);\r\n            setLoadingTable(false);\r\n            console.log(err.response)\r\n        })\r\n    },[page,searchBtn])\r\n    const handlePagination = (isRight)=>{\r\n          if (isRight){\r\n            setPage(isNext);\r\n          }\r\n          else {\r\n              setPage(isPrev)\r\n          }\r\n    }\r\n    const handlePaginationChange = (e, { activePage })=>{\r\n        setPage(activePage-1)\r\n    }\r\n    const handleInputSearch = (e,{name,value})=>{\r\n        setSearchField(value)\r\n    }\r\n    const handleSearch = ()=>{\r\n        setSearchBtn(true);\r\n    }\r\n    const handleAddListe = ()=>{\r\n        history.push(\"/admin/add/dossier\")\r\n    }\r\n    const seeHistoryDossier = (dossier)=>{\r\n        history.push({\r\n            pathname:\"/admin/dossier/history\",\r\n            state:{dossier}\r\n        })\r\n    }\r\n    return (\r\n        (\r\n            <>\r\n            {\r\n                loaded ?(\r\n                    <div className=\"projet_sip\">\r\n                <div className=\"header_table\">\r\n                    <div className=\"row\">\r\n                        <div className=\"search_part\">\r\n                        <Input icon='search' name=\"search_input\" value={searchField} onChange={handleInputSearch} iconPosition='left' placeholder='Rechercher par Postulant, reférence liste ou commune ...' />\r\n                        <Button loading={loadingBtn} content=\"Recherche\" onClick={handleSearch} />\r\n                        <div className=\"pagination_part\">\r\n                        <Pagination\r\n                        onPageChange={handlePaginationChange}\r\n                        firstItem={null}\r\n                        lastItem={null}\r\n                        prevItem={{ content: <Arrow status={isPrev} onClick={handlePagination} />, icon: true }}\r\n                        nextItem={{ content: <Arrow status={isNext} isRight onClick={handlePagination} />, icon: true }}\r\n                        activePage={page+1}\r\n                        totalPages={totalPages}\r\n                        boundaryRange={1}\r\n                        siblingRange={0}\r\n                        />\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"search_part inverted\">\r\n                            <Button  content=\"Ajouter des dossiers\" onClick={handleAddListe} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"table_part\">\r\n                    <Segment loading={loadingTable}>\r\n                    <Table basic >\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                        <Table.HeaderCell width={2} className=\"first\">Postulant<Icon  data-name=\"postulant\" /> </Table.HeaderCell>\r\n                        <Table.HeaderCell width={2} className=\"first\">Conjoint<Icon  data-name=\"conjoint\" /> </Table.HeaderCell>\r\n                        <Table.HeaderCell width={2} className=\"first\">Commune<Icon  data-name=\"place_of_bird\" /> </Table.HeaderCell>\r\n                        <Table.HeaderCell width={2} className=\"first\">Situation familiale<Icon  data-name=\"family_situation\" /> </Table.HeaderCell>\r\n                        <Table.HeaderCell width={1} className=\"first\">Agent responsable<Icon  data-name=\"agent\" /> </Table.HeaderCell>\r\n                        <Table.HeaderCell width={2} className=\"first\">Réference liste<Icon  data-name=\"ref\" /> </Table.HeaderCell>\r\n                        <Table.HeaderCell width={1} className=\"last\"></Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n                <Table.Body>\r\n                    {\r\n                        data.map((dossier,index)=>\r\n                        {\r\n                            return (\r\n                    <Table.Row key={index}>\r\n                            <Table.Cell>{dossier.Postulant && dossier.Postulant ? `${dossier.Postulant.first_name} ${dossier.Postulant.last_name}` : \"/\"}</Table.Cell>\r\n                            <Table.Cell>{dossier.Conjoint && dossier.Conjoint ? `${dossier.Conjoint[0].first_name} ${dossier.Conjoint[0].last_name}` : \"/\"}</Table.Cell>\r\n                            <Table.Cell>{dossier.Postulant && dossier.Postulant.place_of_birth ? dossier.Postulant.place_of_birth : \"/\"}</Table.Cell>\r\n                                <Table.Cell>{dossier.Postulant && dossier.Postulant.family_situation ? dossier.Postulant.family_situation : \"/\"}</Table.Cell>\r\n                                <Table.Cell>{dossier.Transmition && dossier.Transmition.Agent ? dossier.Transmition.Agent.username : \"/\"}</Table.Cell>\r\n                            <Table.Cell>{dossier.Liste && dossier.Liste.ref ? dossier.Liste.ref : \"/\"}</Table.Cell>\r\n                            <Table.Cell>\r\n                                <div className=\"actions_dossier\">\r\n                                    <Button content=\"Voir historique\" color=\"green\" onClick={()=>seeHistoryDossier(dossier)} />\r\n                                </div>\r\n                            </Table.Cell>\r\n                    </Table.Row>\r\n                            )\r\n                        }\r\n                        )\r\n                    }\r\n                </Table.Body>\r\n                </Table>\r\n                \r\n                    </Segment>\r\n                </div>\r\n            </div>\r\n            \r\n                )\r\n                :\r\n                (\r\n                    <LoadingPage />\r\n                )\r\n            }\r\n            </>\r\n        )\r\n    )\r\n}\r\nexport default DossierTable;","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\screens\\Login\\Login.jsx",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossierTable\\AddDossier.jsx",["278","279","280","281","282","283","284"],"import React,{useState,useEffect} from 'react';\r\n//? react excel\r\nimport readXlsxFile from 'read-excel-file';\r\nimport { SheetJSFT } from \"../../types.js\";\r\nimport { schema } from \"../../helpers/schemaExcel\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport {  Form, Message,Modal, Table } from \"semantic-ui-react\";\r\nimport API from '../../API/API.js';\r\n\r\nconst AddDossier = ()=>{\r\n    const history = useHistory();\r\n    const [listes,setListes] = useState([]);\r\n    const [listeId,setListe] = useState(null);\r\n    const [file,setFile] = useState(null);\r\n    const [loadingBtn,setLoadingBtn] = useState(false);\r\n    const [success,setSuccess] = useState(null);\r\n    const [open,setOpen] = useState(false);\r\n    const [de,setDe] = useState(\"\");\r\n    const [errorDe,setErrorDe] = useState(false);\r\n    const [a,setA] = useState(\"\");\r\n    const [errorA,setErrorA] = useState(false);\r\n    const [agents,setAgents] = useState(\"\");\r\n    const [agentId,setAgentId] = useState(\"\");\r\n    const [transmition,setTransmition] = useState([]);\r\n    const [errorAgent,seterrorAgent] = useState(false);\r\n    const [dossierLength,setDossierLength] = useState(0);\r\n    const [dossiersId,setDossierId] = useState([]);\r\n    \r\n    const handleDossierId = (id,num,date)=>{\r\n       setDossierId(prevState=>[...prevState,{\r\n           n:num,\r\n           id,\r\n           date\r\n       }])\r\n    }\r\n    //? GET Promoteurs\r\n    useEffect(()=>{\r\n        listes && listes.length>0 && setListes([]);\r\n        API.get(\"/api/liste/all?size=9999999999\")\r\n        .then(res=>{\r\n            res.data.results.map(liste=>setListes(prevState=>[...prevState,{\r\n                key:liste.id,\r\n                text:liste.type+ \" \"+liste.ref,\r\n                value:liste.id\r\n            }]))\r\n        })\r\n        .catch(err=>{\r\n            history.push(\"/error\");\r\n        })\r\n    },[]);\r\n\r\n    //? check if all dossier done then fetch transmition\r\n    useEffect(()=>{\r\n        if ( (dossierLength === dossiersId.length) && dossierLength >0 ){\r\n            console.log({\r\n                message:\"DossierLength === DossierId.Length\",\r\n                dossierLength,\r\n                dossiersId:dossiersId.length\r\n            })\r\n            transmition.map(t=>{\r\n                const from = t.from;\r\n                const to = t.to;\r\n                console.log({\r\n                    message:\"Mapping transmitions\",\r\n                    from:from,\r\n                    to:to\r\n                })\r\n                for (let i = from; i <= to; i++) {\r\n                    const {AgentId} = t\r\n                    dossiersId.map(dossier=>{\r\n                        if (dossier.n === i){\r\n                            console.log({\r\n                                message:\"num dossier === i\",\r\n                                i,\r\n                                num:dossier.n\r\n                            })\r\n                            AddTransmition( AgentId,dossier.date,dossier.id)\r\n                        }\r\n                    })\r\n                }\r\n            });\r\n            setSuccess(true);\r\n            setLoadingBtn(false);\r\n        }\r\n    },[dossiersId])\r\n\r\n    //? GET Agents\r\n    useEffect(()=>{\r\n        API.get(\"/api/agents?size=9999999999\")\r\n        .then(res=>{\r\n            res.data.results.map(agent=>setAgents(prevState=>[...prevState,{\r\n                key:agent.id,\r\n                text:agent.username,\r\n                value:agent.id\r\n            }]))\r\n        })\r\n        .catch(err=>{\r\n            history.push(\"/error\");\r\n        })\r\n    },[]);\r\n\r\n    const AddTransmition = (AgentId,date,DossierId)=>{\r\n        const body = {\r\n            AgentId,\r\n            date,\r\n            DossierId\r\n        }\r\n        API.post('/api/transmition',body)\r\n        .then(res=>{\r\n            console.log(res);\r\n        })\r\n        .catch(err=>{\r\n            console.log(err.response);\r\n        })\r\n    }\r\n\r\n    //? handle file\r\n    const handleFile = (e)=>{\r\n        setSuccess(null);\r\n        e.target.files && e.target.files[0] && setFile(e.target.files[0]);\r\n        e.target.files && e.target.files[0] && checkDossierLength(e.target.files[0]);\r\n    }\r\n    //? get familly situation\r\n    const getFamilySituation = (situation)=>{\r\n        switch (situation) {\r\n            case \"D\":\r\n                return \"Divorced\";\r\n            case \"V\":\r\n                return \"Widower\";\r\n            case \"M\":\r\n                return \"Married\";\r\n            case \"C\":\r\n                return \"Single\"\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const handlePostulant = (dossier)=>{\r\n        const {adr,c_date_place,c_first_name,c_last_name,date_of_birth,father,first_name,last_name,mother,num,place_of_birth} = dossier;\r\n        const family_situation = dossier.family_situation=== \"/\" ? null : dossier.family_situation.split(\"+\")[0];\r\n        const number_childs = dossier.family_situation === \"/\" ? null : parseInt(dossier.family_situation.split(\"+\")[1]);\r\n\r\n        const motherLastName = mother.split(\" \");\r\n        if (motherLastName.length > 2){\r\n            motherLastName.splice(-1,1)\r\n        }\r\n\r\n        let bodyPostulant = {\r\n            first_name,\r\n            last_name,\r\n            place_of_birth,\r\n            date_of_birth,\r\n            first_name_father:father,\r\n            first_name_mother:mother === \"/\" ? null : mother.split(\" \")[mother.split(\" \").length - 1],\r\n            last_name_mother:mother === \"/\" ? null : motherLastName.join(\" \"),\r\n            family_situation:getFamilySituation(family_situation),\r\n            number_childs,\r\n            adr\r\n        }\r\n\r\n        let bodyConjoint = {\r\n            first_name:c_first_name,\r\n            last_name:c_last_name,\r\n            date_of_birth:c_date_place === \"/\" ? null : new Date( c_date_place.split(\" \")[0].split(\"/\")[2]+\"/\"+c_date_place.split(\" \")[0].split(\"/\")[1]+\"/\"+c_date_place.split(\" \")[0].split(\"/\")[0]),\r\n            place_of_birth: c_date_place === \"/\" ? null : c_date_place.split(\" \")[1]\r\n        }\r\n\r\n        FetchPostDossier(bodyPostulant,bodyConjoint,num);\r\n    }\r\n    //? handle promoteur dropdown\r\n    const handleChangeListe = (e,{value})=>{\r\n        setSuccess(null);\r\n        setListe(value);\r\n    }\r\n\r\n    const handleChangeAgent = (e,{value})=>{\r\n        errorAgent && seterrorAgent(false);\r\n        setAgentId(value);\r\n    }\r\n\r\n\r\n    const checkDossierLength = (file)=>{\r\n        readXlsxFile(file, { schema }).then(({ rows, errors }) => {\r\n            setDossierLength(rows.length);\r\n          })\r\n    }\r\n\r\n    //? add project \r\n    const handleAddProject = ()=>{\r\n        setLoadingBtn(true);\r\n        if (!listeId || !file){\r\n            setLoadingBtn(false);\r\n            return setSuccess(false);\r\n        }\r\n        if (file){\r\n            readXlsxFile(file, { schema }).then(({ rows, errors }) => {\r\n                setDossierLength(rows.length);\r\n                rows.map(dossier=>{\r\n                    handlePostulant(dossier)\r\n                })\r\n              })\r\n        }\r\n    }\r\n\r\n    const FetchPostDossier = (bodyP,bodyC,num)=>{\r\n        API.post(\"/api/postulant\",bodyP)\r\n        .then(res=>{\r\n            const PostulantId = res.data.id;\r\n            API.post(\"/api/conjoint\",{...bodyC,PostulantId})\r\n            .then(res=>{\r\n                console.log(res);\r\n                API.post(\"/api/dossier\",{PostulantId,ListeId:listeId,status:\"Nouveau\",n:num})\r\n                .then(res=>{\r\n                    const date = res.data.createdAt\r\n                    handleDossierId(res.data.id,num,date);\r\n                })\r\n                .catch(err=>{\r\n                    console.log(err.response);\r\n                    setSuccess(false)\r\n                    setLoadingBtn(false);\r\n                })\r\n            })\r\n            .catch(err=>{\r\n                console.log(err.response);\r\n                setSuccess(false)\r\n                setLoadingBtn(false);\r\n            })\r\n        })\r\n        .catch(err=>{\r\n            console.log(err.response);\r\n            setSuccess(false);\r\n            setLoadingBtn(false);\r\n        })\r\n        \r\n    }\r\n    const handleFormModalInput = (e,{name,value})=>{\r\n        errorA && setErrorA(false);\r\n        errorDe && setErrorDe(false);\r\n        switch (name) {\r\n            case \"de\":\r\n                setDe(value)\r\n                break;\r\n            case \"a\":\r\n                setA(value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n    const isNumber = (n)=> /^-?[\\d.]+(?:e-?\\d+)?$/.test(n);\r\n    const handleAddAgent = ()=>{\r\n        let success = true;\r\n        if (!isNumber(a)){\r\n            setErrorA(true);\r\n            success = false;\r\n        }\r\n        if (!isNumber(de)){\r\n            setErrorDe(true);\r\n            success = false;\r\n        }\r\n        if (!agentId){\r\n            seterrorAgent(true);\r\n            success = false;\r\n        }\r\n        if (isNumber(a) && isNumber(de) && parseInt(de) > parseInt(a)){\r\n            setErrorDe(true);\r\n            setErrorA(true);\r\n            success = false;\r\n        }\r\n         if (transmition.length>0){\r\n            if (transmition[transmition.length-1].to > parseInt(de) ){\r\n                setErrorDe(true);\r\n                success = false;\r\n            }\r\n         } \r\n        if (parseInt(a) > dossierLength){\r\n            setErrorA(true);\r\n            success = false;\r\n        }\r\n        success && setTransmition(prevState=>\r\n            [...prevState,{\r\n                AgentId:agentId,\r\n                from:parseInt(de),\r\n                to:parseInt(a)\r\n            }]\r\n            );\r\n        success && setOpen(false);\r\n    }\r\n    return (\r\n        <div className=\"projet_sip add_project\">\r\n            <div className=\"header_table dossier\">\r\n                <div className=\"row\">\r\n                    <Form error={!success} className=\"form_add_project\">\r\n                        <Form.Group>\r\n                            <Form.Dropdown onChange={handleChangeListe}  size=\"big\" label=\"Liste\" selection options={listes}  />\r\n                            <div className=\"file_input\">\r\n                                \r\n                                <Form.Input value={file ? file.name : \"\"} disabled type=\"text\" label=\"Fichier Excel\" />\r\n                                <label htmlFor=\"file_dossier\" >\r\n                                    Ajouter le fichier\r\n                                    <input id=\"file_dossier\" style={{\r\n                                        display:\"none\"\r\n                                        }} type=\"file\" onChange={handleFile} accept={SheetJSFT}  />\r\n                                </label>\r\n                            </div>\r\n                        </Form.Group>\r\n                        <div className=\"actions_dossier\">\r\n                        <Form.Button loading={loadingBtn} className=\"actions\" content=\"Confirmer\" onClick={handleAddProject} />\r\n                        <Form.Button  className=\"actions\" content=\"Ajouter agent\" color=\"orange\" onClick={()=>setOpen(true)}  />\r\n                        </div>\r\n                        {\r\n                            <Table>\r\n                                    <Table.Header>\r\n                                         <Table.Row>\r\n                                                <Table.HeaderCell width={2} className=\"first\">Nom d'utilisateur </Table.HeaderCell>\r\n                                                <Table.HeaderCell width={2} className=\"first\">Début numéro dossier</Table.HeaderCell>\r\n                                                <Table.HeaderCell width={2} className=\"first\">Fin numéro dossier</Table.HeaderCell>\r\n                                        </Table.Row>\r\n                                    </Table.Header>\r\n                                   {\r\n                                       transmition.length === 0 &&\r\n                                       <div className=\"no_data_agents\">\r\n                                            <h1>\r\n                                            Pas d'agents ajoutées \r\n                                        </h1>\r\n                                        </div>\r\n                                   }\r\n                                    {\r\n                                        transmition.length > 0 &&\r\n                                        <Table.Body>\r\n                                        {\r\n                                            transmition.map((t,index)=>\r\n                                            {\r\n                                                let username;\r\n                                                agents.map(agent=>{\r\n                                                    if (agent.key === t.AgentId){\r\n                                                        username = agent.text\r\n                                                    }\r\n                                                })\r\n                                                return (\r\n                                            <Table.Row key={index}>\r\n                                                <Table.Cell>{username}</Table.Cell>\r\n                                                <Table.Cell>{t.from}</Table.Cell>\r\n                                                <Table.Cell>{t.to}</Table.Cell>\r\n                                            </Table.Row>\r\n                                                )\r\n                                            }\r\n                                            )\r\n                                        }\r\n                                    </Table.Body>\r\n                                    }\r\n                            </Table>\r\n                        }\r\n                        \r\n                <div className=\"message_project\">\r\n                        {success === false && <Message  error={!success} content='Veuillez remplir tous les champs obligatoires'  />}\r\n                        { success &&  <Message  color='green ' content='Dossiers ajouté avec succée'  />}\r\n                </div>\r\n                    </Form>\r\n                    \r\n                    <Modal\r\n                    open={open}\r\n                    onClose={()=>setOpen(false)}\r\n                >\r\n                    \r\n                        \r\n            <div className=\"form_agent_add\">\r\n            <Form>\r\n                <Form.Dropdown error={errorAgent} onChange={handleChangeAgent}  size=\"big\" label=\"Agent\" selection options={agents}  />\r\n                <Form.Input error={errorDe} label=\"De\" name=\"de\" type=\"text\"  value={de} onChange={handleFormModalInput} />\r\n                <Form.Input error={errorA} label=\"A\" name=\"a\"  type=\"text\" value={a} onChange={handleFormModalInput} />\r\n                <Form.Button className=\"btn\" onClick={handleAddAgent} >\r\n                    Confirmer\r\n                </Form.Button>\r\n            </Form>\r\n            </div>\r\n            \r\n      </Modal>\r\n      \r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default AddDossier;\r\n","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossiertTreatment\\FormVerification.jsx",["285"],"import React,{useEffect,useState} from 'react';\r\nimport { Form,TransitionablePortal,Segment, Icon,Message } from \"semantic-ui-react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport API from '../../API/API.js';\r\n\r\nconst FormVerification =(props)=>{\r\n    const {end,dossierId,start} = props;\r\n    const [date_bloque,setDateBloque] = useState(null);\r\n    const [date_debloque,setDateDebloque] = useState(null);\r\n    const [dateBordoreau,setDateBordoreau] = useState(null);\r\n    const [dateReceptionR,setReceptionR] = useState(null);\r\n    const [piece_manq,setPM] = useState(false);\r\n    const [dossierBloque,setDossierBloque] = useState(false);\r\n    const [dossierAvecReserve,setDossierAvecReserve] = useState(false);\r\n    const [showSuccess,setShowSuccess] = useState(false);\r\n    const [numB,setNumB] = useState(\"\");\r\n    const [err,setErr] = useState(false);\r\n\r\n    //? if add it to the body if POST request\r\n    const [untPM,setUNPM] = useState(true);\r\n    const [untBloque,setUNTBloque] = useState(true);\r\n    const [untDebloque,setUNDebloque] = useState(true);\r\n    const [untouchableDateBloque,setUntouchableDateBloque] = useState(true);\r\n    const [untouchableDateDebloque,setUntouchableDateDebloque] = useState(true);\r\n    const [untouchableDateEnvoieBord,setUntouchableDateEnvoieBord] = useState(true);\r\n    const [untouchableDateReceptionReserve,setUntouchableDateReceptionReserve] = useState(true);\r\n    const [untouchableNumeroBord,setUntouchableNumeroBord] = useState(true);\r\n\r\n    //? get input values from api\r\n    useEffect(()=>{\r\n    API.get(`/api/dossier/${dossierId}`)\r\n    .then(res=>{\r\n        const {is_piece_manque,is_dossier_bloque,is_dossier_avec_reserve,num_bordoreau} = res.data;\r\n        res.data.date_bloque && setDateBloque(new Date(res.data.date_bloque));\r\n        res.data.date_envoie_bordoreau && setDateBordoreau(new Date(res.data.date_envoie_bordoreau));\r\n        res.data.date_debloque && setDateDebloque(new Date(res.data.date_debloque));\r\n        res.data.date_reception_reserve && setReceptionR(new Date(res.data.date_reception_reserve));\r\n        is_piece_manque !== null && setPM(is_piece_manque);\r\n        is_dossier_bloque !== null && setDossierBloque(is_dossier_bloque);\r\n        is_dossier_avec_reserve !== null && setDossierAvecReserve(is_dossier_avec_reserve);\r\n        num_bordoreau && setNumB(num_bordoreau);\r\n        \r\n\r\n\r\n    })\r\n    .catch(err=>{\r\n        console.error(err);\r\n    })\r\n    },[])\r\n\r\n    const handleAddTreat = async()=>{\r\n        if (!start){\r\n            setErr(true);\r\n        } else if (!end){\r\n            let body = {\r\n            }\r\n            if (!untPM) body[\"is_piece_manque\"] = piece_manq;\r\n            if (!untBloque) body[\"is_dossier_avec_reserve\"] = dossierAvecReserve;\r\n            if (!untDebloque) body[\"is_dossier_bloque\"] = dossierBloque;\r\n            if (!untouchableDateBloque) body[\"date_bloque\"] = date_bloque;\r\n            if (!untouchableDateDebloque) body[\"date_debloque\"] = date_debloque;\r\n            if (!untouchableNumeroBord) body[\"num_bordoreau\"] = numB;\r\n            if (!untouchableDateEnvoieBord) body[\"date_envoie_bordoreau\"] = dateBordoreau;\r\n            if (!untouchableDateReceptionReserve) body[\"date_reception_reserve\"] = dateReceptionR;\r\n\r\n\r\n            API.post(\"/api/verification\",{...body,\r\n                \"DossierId\":dossierId})\r\n            .then(res=>{\r\n                API.put(\"/api/dossier/\"+dossierId,body)\r\n                .then(res=>{\r\n                    setShowSuccess(true);\r\n                    setTimeout(()=>{\r\n                        setShowSuccess(false)\r\n                        window.location.reload();\r\n                    },2000)\r\n                })\r\n                .catch(err=>{\r\n                    console.log(err.response);\r\n                })\r\n            })\r\n            .catch(err=>{\r\n                console.log(err.response);\r\n            })\r\n            \r\n        }\r\n    }\r\n        return (\r\n            <div className=\"form_treat\">\r\n                 <TransitionablePortal\r\n                   open={showSuccess}\r\n                   onClose={()=>{\r\n                    setShowSuccess(false);\r\n                    window.location.reload();\r\n                   }}\r\n               >\r\n                   <Segment className=\"modal-date\"\r\n       >\r\n         <h1>Succès <Icon name=\"check circle\" /> </h1>\r\n         <p>informations ajouté avec succès</p>\r\n       </Segment>\r\n               </TransitionablePortal>\r\n                   \r\n                <Form error={err}>\r\n                <Form.Group>\r\n                    <div className=\"date_input\">\r\n                            <label>\r\n                                Date Bloquer\r\n                            </label>\r\n                        <DatePicker disabled={end} dateFormat=\"MMMM d, yyyy h:mm aa\" showTimeSelect selected={date_bloque} onChange={date => {\r\n                            setErr(false);\r\n                            setUntouchableDateBloque(false);\r\n                            setDateBloque(date)\r\n                        }} />\r\n                    </div>\r\n                    <div className=\"date_input\">\r\n                            <label>\r\n                                Date Debloquer\r\n                            </label>\r\n                        <DatePicker disabled={end} dateFormat=\"MMMM d, yyyy h:mm aa\" showTimeSelect selected={date_debloque} onChange={date => {\r\n                            setErr(false);\r\n                            setUntouchableDateDebloque(false);\r\n                            setDateDebloque(date)\r\n                        }} />\r\n                    </div>\r\n                    </Form.Group>\r\n                    \r\n                <Form.Group>\r\n                    <div className=\"date_input\">\r\n                            <label>\r\n                                Date Envoie Bordoreau\r\n                            </label>\r\n                        <DatePicker disabled={end} dateFormat=\"MMMM d, yyyy h:mm aa\" showTimeSelect selected={dateBordoreau} onChange={date => {\r\n                            setErr(false);\r\n                            setUntouchableDateEnvoieBord(false);\r\n                            setDateBordoreau(date)\r\n                        }} />\r\n                    </div>\r\n                    <div className=\"date_input\">\r\n                            <label>\r\n                                Date Reception des reserves\r\n                            </label>\r\n                        <DatePicker disabled={end} dateFormat=\"MMMM d, yyyy h:mm aa\" showTimeSelect selected={dateReceptionR} onChange={date => {\r\n                            setErr(false);\r\n                            setUntouchableDateReceptionReserve(false);\r\n                            setReceptionR(date)\r\n                        }} />\r\n                    </div>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <Form.Input disabled={end} className=\"date_input other_input\" label=\"Numero Bordoreau\" value={numB} onChange={(e,{value})=>{\r\n                            setErr(false);\r\n                            setUntouchableNumeroBord(false);\r\n                            setNumB(value)}\r\n                        } />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                    <Form.Radio disabled={end} checked={piece_manq} onClick={()=>{\r\n                        setErr(false)\r\n                        setUNPM(false);\r\n                        setPM(prevState=>!prevState)\r\n                    }} className={piece_manq?\"radio_input active\" :\"radio_input\"} label=\"pièce manquante\" />\r\n                    <Form.Radio disabled={end} className={dossierBloque?\"radio_input active\" :\"radio_input\"} label=\"dossier bloquer\" checked={dossierBloque} onClick={()=>{\r\n                        setErr(false)\r\n                        setUNTBloque(false);\r\n                        setDossierBloque(prevState=>!prevState)\r\n                    }}  />\r\n                    <Form.Radio disabled={end} className={dossierAvecReserve?\"radio_input active\" :\"radio_input\"} label=\"dossier avec reserves\" checked={dossierAvecReserve} onClick={()=>{\r\n                        setErr(false)\r\n                        setUNDebloque(false);\r\n                        setDossierAvecReserve(prevState=>!prevState)\r\n                    }} />\r\n                    </Form.Group>\r\n                    \r\n                    <div className=\"actions\">\r\n                        <Form.Button disabled={end} content=\"Sauvegarder\" onClick={handleAddTreat} />\r\n                    </div>\r\n                    <Message error content=\"Veilleuz ajouter une date de debut avant\" />\r\n\r\n                </Form>\r\n            </div>\r\n    )\r\n}\r\nexport default FormVerification;\r\n","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossiertTreatment\\FormRevenue.jsx",["286"],"import React,{useEffect,useState} from 'react';\r\nimport { Form,TransitionablePortal,Segment, Icon, Message } from \"semantic-ui-react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport API from '../../API/API.js';\r\nimport ReplaceForNull from \"../../helpers/ReplaceForNull\";\r\n\r\nconst FormRevenue =(props)=>{\r\n    const {end,dossierId,start} = props;\r\n    const [showSuccess,setShowSuccess] = useState(false);\r\n    const [revenue_p,setRevenueP] = useState(\"\");\r\n    const [revenue_c,setRevenueC] = useState(\"\");\r\n    const [dateRevenueRejet,setDateRevenueRejet] = useState(null);\r\n    const [is_revenue_rejet,setRR] = useState(false);\r\n    const [unRR,setUNRR] = useState(true);\r\n    const [err,setErr] = useState(false);\r\n\r\n    //? get data to input\r\n    useEffect(()=>{\r\n        API.get(\"/api/dossier/\"+dossierId)\r\n        .then(res=>{\r\n            setRR(ReplaceForNull(res.data.rejet_revenue,false));\r\n            setRevenueC(ReplaceForNull(res.data.revenue_conjoint,\"\"));\r\n            setRevenueP(ReplaceForNull(res.data.revenue_postulant,\"\"));\r\n            res.data.date_revenue_rejet && setDateRevenueRejet(ReplaceForNull(new Date(res.data.date_revenue_rejet),null));\r\n        })\r\n        .catch(err=>{\r\n            console.log(err.response);\r\n        })\r\n    },[])\r\n\r\n    const handleAddRevenue = ()=>{\r\n        if (!start){\r\n            setErr(true);\r\n        } else if (!end){\r\n        let body = {};\r\n        if (revenue_c.length > 0) body[\"revenue_conjoint\"] = revenue_c;\r\n        if (revenue_p.length > 0) body[\"revenue_postulant\"] = revenue_p;\r\n        if (dateRevenueRejet) body[\"date_revenue_rejet\"] = dateRevenueRejet;\r\n        if (unRR) body['rejet_revenue'] = is_revenue_rejet;\r\n        API.post(\"/api/revenue_rejet\",{...body,DossierId:dossierId})\r\n        .then(res=>{\r\n            API.put(`/api/dossier/${dossierId}`,body)\r\n            .then(res=>{\r\n                setShowSuccess(true);\r\n                    setTimeout(()=>{\r\n                        setShowSuccess(false)\r\n                        window.location.reload();\r\n                    },2000)\r\n            })\r\n        })\r\n        .catch(err=>{\r\n            console.log(err.response);\r\n        })\r\n        }\r\n    }\r\n\r\n    const IconDA = ()=>{\r\n        return <div className=\"dinard\">DA</div>\r\n    }\r\n\r\n  \r\n\r\n        return (\r\n            <div className=\"form_treat\">\r\n                 <TransitionablePortal\r\n                   open={showSuccess}\r\n                   onClose={()=>{\r\n                    setShowSuccess(false);\r\n                    window.location.reload();\r\n                   }}\r\n               >\r\n                   <Segment className=\"modal-date\"\r\n       >\r\n         <h1>Succès <Icon name=\"check circle\" /> </h1>\r\n         <p>informations ajouté avec succès</p>\r\n       </Segment>\r\n               </TransitionablePortal>\r\n                   \r\n                <Form error={err}>\r\n                <Form.Group>\r\n                        <Form.Input className=\"date_input other_input\" label=\"Revenue Postulant\" icon={IconDA} value={revenue_p} onChange={(e,{value})=>{\r\n                            setErr(false);\r\n                            setRevenueP(value)\r\n                        }} /> \r\n                        <Form.Input className=\"date_input other_input\" label=\"Revenue Conjoint\" icon={IconDA} value={revenue_c} onChange={(e,{value})=>{\r\n                            setErr(false);\r\n                            setRevenueC(value)\r\n                        }} />\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                    <div className=\"date_input\">\r\n                            <label>\r\n                                Date Rejet Revenue\r\n                            </label>\r\n                        <DatePicker dateFormat=\"MMMM d, yyyy h:mm aa\" showTimeSelect selected={dateRevenueRejet} onChange={date => {\r\n                            setErr(false);\r\n                            setDateRevenueRejet(date)\r\n                        }} />\r\n                    </div>\r\n                    </Form.Group> \r\n                    <Form.Group>\r\n                    <Form.Radio checked={is_revenue_rejet} onClick={()=>{\r\n                        setUNRR(false);\r\n                        setRR(prevState=>!prevState)\r\n                    }} className={is_revenue_rejet?\"radio_input active\" :\"radio_input\"} label=\"Rejet pour revenue\" />\r\n                    </Form.Group>\r\n                    \r\n                    <div className=\"actions\">\r\n                        <Form.Button content=\"Sauvegarder\" onClick={handleAddRevenue} />\r\n                    </div>\r\n                    <Message error content=\"Veilleuz ajouter une date de debut avant\" />\r\n                </Form>\r\n            </div>\r\n    )\r\n}\r\nexport default FormRevenue;\r\n","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossiertTreatment\\FormControl.jsx",["287","288"],"import React,{useEffect,useState} from 'react';\r\nimport { Form,TransitionablePortal,Segment, Icon, Message, Dropdown } from \"semantic-ui-react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport API from '../../API/API.js';\r\nimport ReplaceForNull from \"../../helpers/ReplaceForNull\";\r\n\r\nconst FormControl =(props)=>{\r\n    const {end,dossierId,start} = props;\r\n    const [showSuccess,setShowSuccess] = useState(false);\r\n    const [num_ctrl,setNumCtrl] = useState(\"\");\r\n    const [date_resultat_ctrl,setDate_resultat_ctrl] = useState(\"\");\r\n    const [dateCtrlRejet,setDateCtrlRejet] = useState(null);\r\n    const [is_ctrl_rejet,setCR] = useState(false)\r\n    const [err,setErr] = useState(false);\r\n    const [dateCtrl,setdateCtrl] = useState(null);\r\n    const [nature_ctrl,setnature_ctrl] = useState(\"\");\r\n    const [uncr,setUNCR] = useState(true);\r\n    const [resulta_ctrl,setresulta_ctrl] = useState(\"\");\r\n    const natures = [\r\n        {\r\n            key:0,\r\n            value:\"nv\",\r\n            text:\"nouveau\"\r\n        },\r\n        {\r\n            key:1,\r\n            value:\"redressement\",\r\n            text:\"redressement\"\r\n        },\r\n        {\r\n            key:2,\r\n            value:\"recours\",\r\n            text:\"recours\"\r\n        },\r\n    ]\r\n\r\n    //? get data to input\r\n    useEffect(()=>{\r\n        API.get(\"/api/dossier/\"+dossierId)\r\n        .then(res=>{\r\n            if (res.data.is_ctrl_rejet) setCR(res.data.is_ctrl_rejet);\r\n            if (res.data.num_ctrl) setNumCtrl(res.data.num_ctrl);\r\n            if (res.data.date_resultat_ctrl) setDate_resultat_ctrl(new Date(res.data.date_resultat_ctrl));    \r\n            if (res.data.date_rejet_ctrl) setDateCtrlRejet(new Date(res.data.date_rejet_ctrl));\r\n            if (res.data.date_ctrl) setdateCtrl(new Date(res.data.date_ctrl));\r\n            if (res.data.resultat_ctrl) setresulta_ctrl(res.data.resultat_ctrl);\r\n            if (res.data.rejet_ctrl) setnature_ctrl(res.data.rejet_ctrl)\r\n        })\r\n        .catch(err=>{\r\n            console.error(err)\r\n        })\r\n    },[])\r\n\r\n    const handleAddControl = ()=>{\r\n        if (!start){\r\n            setErr(true);\r\n        } else if (!end){\r\n        let body = {};\r\n        if (!uncr) body[\"is_ctrl_rejet\"] = is_ctrl_rejet;\r\n        if (num_ctrl.length > 0 ) body[\"num_ctrl\"] = num_ctrl;\r\n        if (date_resultat_ctrl) body[\"date_resultat_ctrl\"] = date_resultat_ctrl;\r\n        if (dateCtrlRejet) body[\"date_rejet_ctrl\"] = dateCtrlRejet;\r\n        if (dateCtrl) body[\"date_ctrl\"] = dateCtrl;\r\n        if (nature_ctrl.length>0) body[\"rejet_ctrl\"] = nature_ctrl;\r\n        if (resulta_ctrl.length) body[\"resultat_ctrl\"] = resulta_ctrl;\r\n        API.post(\"/api/control_rejet\",{...body,DossierId:dossierId})\r\n        .then(res=>{\r\n            API.put(`/api/dossier/${dossierId}`,body)\r\n            .then(res=>{\r\n                setShowSuccess(true);\r\n                    setTimeout(()=>{\r\n                        setShowSuccess(false)\r\n                        window.location.reload();\r\n                    },2000)\r\n            })\r\n        })\r\n        .catch(err=>{\r\n            console.log(err.response);\r\n        })\r\n        }\r\n    }\r\n\r\n        return (\r\n            <div className=\"form_treat\">\r\n                 <TransitionablePortal\r\n                   open={showSuccess}\r\n                   onClose={()=>{\r\n                    setShowSuccess(false);\r\n                    window.location.reload();\r\n                   }}\r\n               >\r\n                   <Segment className=\"modal-date\"\r\n       >\r\n         <h1>Succès <Icon name=\"check circle\" /> </h1>\r\n         <p>informations ajouté avec succès</p>\r\n       </Segment>\r\n               </TransitionablePortal>\r\n                   \r\n                <Form error={err}>\r\n                <Form.Group>\r\n                        <Form.Input className=\"date_input other_input\" label=\"Numéro Controle\"  value={num_ctrl} onChange={(e,{value})=>{\r\n                            setErr(false);\r\n                            setNumCtrl(value)\r\n                        }} /> \r\n                        <div className=\"date_input\">\r\n                            <label>\r\n                                Date Controle\r\n                            </label>\r\n                        <DatePicker dateFormat=\"MMMM d, yyyy h:mm aa\" showTimeSelect selected={dateCtrl} onChange={date => {\r\n                            setErr(false);\r\n                            setdateCtrl(date)\r\n                        }} />\r\n                    </div>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        <div className=\"date_input other_input\">\r\n                            <label>\r\n                            Nature Controle\r\n                            </label>\r\n                            \r\n                        <Dropdown className=\"dropdown_input_treat\" onChange={(e,{value})=>{\r\n                             setErr(false);\r\n                             setnature_ctrl(value)\r\n                        }} value={nature_ctrl} size=\"big\" label=\"Nature Controle\" selection options={natures} />\r\n                    </div>\r\n                        \r\n                    <div className=\"date_input\">\r\n                            <label>\r\n                                Date Résultat Controle\r\n                            </label>\r\n                        <DatePicker dateFormat=\"MMMM d, yyyy h:mm aa\" showTimeSelect selected={date_resultat_ctrl} onChange={date => {\r\n                            setErr(false);\r\n                            setDate_resultat_ctrl(date)\r\n                        }} />\r\n                    </div>\r\n                    </Form.Group> \r\n                    <Form.Group>\r\n                        \r\n                    <Form.Input className=\"date_input other_input\" label=\"Résultat Controle\"  value={resulta_ctrl} onChange={(e,{value})=>{\r\n                            setErr(false);\r\n                            setresulta_ctrl(value)\r\n                        }} />\r\n                    <div className=\"date_input\">\r\n                            <label>\r\n                                Date Rejet Controle\r\n                            </label>\r\n                        <DatePicker dateFormat=\"MMMM d, yyyy h:mm aa\" showTimeSelect selected={dateCtrlRejet} onChange={date => {\r\n                            setErr(false);\r\n                            setDateCtrlRejet(date)\r\n                        }} />\r\n                    </div>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        \r\n                    <Form.Radio checked={is_ctrl_rejet} onClick={()=>{\r\n                        setUNCR(false);\r\n                        setCR(prevState=>!prevState)\r\n                    }} className={is_ctrl_rejet?\"radio_input active\" :\"radio_input\"} label=\"Rejet pour controle\" />\r\n                    </Form.Group>\r\n                    <div className=\"actions\">\r\n                        <Form.Button content=\"Sauvegarder\" onClick={handleAddControl} />\r\n                    </div>\r\n                    <Message error content=\"Veilleuz ajouter une date de debut avant\" />\r\n                </Form>\r\n            </div>\r\n    )\r\n}\r\nexport default FormControl;\r\n","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossiertTreatment\\FormCf.jsx",["289","290"],"import React,{useEffect,useState} from 'react';\r\nimport { Form,TransitionablePortal,Segment, Icon, Message } from \"semantic-ui-react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport API from '../../API/API.js';\r\nimport ReplaceForNull from \"../../helpers/ReplaceForNull\";\r\n\r\nconst FormCf =(props)=>{\r\n    const {end,dossierId,start} = props;\r\n    const [showSuccess,setShowSuccess] = useState(false);\r\n    const [num_cf,setNumCf] = useState(\"\");\r\n    const [date_resultat_cf,setDate_resultat_cf] = useState(\"\");\r\n    const [dateCfRejet,setDateCfRejet] = useState(null);\r\n    const [is_cf_rejet,setCF] = useState(false)\r\n    const [err,setErr] = useState(false);\r\n    const [dateCf,setDateCf] = useState(null);\r\n    const [uncr,setUNCR] = useState(true);\r\n    const [resulta_cf,setresulta_cf] = useState(\"\");\r\n\r\n    //? get data to input\r\n    useEffect(()=>{\r\n        API.get(\"/api/dossier/\"+dossierId)\r\n        .then(res=>{\r\n            if (res.data.rejet_cf) setCF(res.data.rejet_cf);\r\n            if (res.data.num_cf) setNumCf(res.data.num_cf);\r\n            if (res.data.date_resultat_cf) setDate_resultat_cf(new Date(res.data.date_resultat_cf));    \r\n            if (res.data.date_rejet_cf) setDateCfRejet(new Date(res.data.date_rejet_cf));\r\n            if (res.data.date_cf) setDateCf(new Date(res.data.date_cf));\r\n            if (res.data.resultat_cf) setresulta_cf(res.data.resultat_cf);\r\n        })\r\n        .catch(err=>{\r\n            console.error(err)\r\n        })\r\n    },[])\r\n\r\n    const handleAddControl = ()=>{\r\n        if (!start){\r\n            setErr(true);\r\n        } else if (!end){\r\n        let body = {};\r\n        if (!uncr) body[\"rejet_cf\"] = is_cf_rejet;\r\n        if (num_cf.length > 0 ) body[\"num_cf\"] = num_cf;\r\n        if (date_resultat_cf) body[\"date_resultat_cf\"] = date_resultat_cf;\r\n        if (dateCfRejet) body[\"date_rejet_cf\"] = dateCfRejet;\r\n        if (dateCf) body[\"date_cf\"] = dateCf;\r\n        if (resulta_cf.length) body[\"resultat_cf\"] = resulta_cf;\r\n        API.post(\"/api/cf_rejet\",{...body,DossierId:dossierId})\r\n        .then(res=>{\r\n            API.put(`/api/dossier/${dossierId}`,body)\r\n            .then(res=>{\r\n                setShowSuccess(true);\r\n                    setTimeout(()=>{\r\n                        setShowSuccess(false)\r\n                        window.location.reload();\r\n                    },2000)\r\n            })\r\n        })\r\n        .catch(err=>{\r\n            console.log(err.response);\r\n        })\r\n        }\r\n    }\r\n\r\n        return (\r\n            <div className=\"form_treat\">\r\n                 <TransitionablePortal\r\n                   open={showSuccess}\r\n                   onClose={()=>{\r\n                    setShowSuccess(false);\r\n                    window.location.reload();\r\n                   }}\r\n               >\r\n                   <Segment className=\"modal-date\"\r\n       >\r\n         <h1>Succès <Icon name=\"check circle\" /> </h1>\r\n         <p>informations ajouté avec succès</p>\r\n       </Segment>\r\n               </TransitionablePortal>\r\n                   \r\n                <Form error={err}>\r\n                <Form.Group>\r\n                        <Form.Input className=\"date_input other_input\" label=\"Numéro Cf\"  value={num_cf} onChange={(e,{value})=>{\r\n                            setErr(false);\r\n                            setNumCf(value)\r\n                        }} /> \r\n                        <div className=\"date_input\">\r\n                            <label>\r\n                                Date Cf\r\n                            </label>\r\n                        <DatePicker dateFormat=\"MMMM d, yyyy h:mm aa\" showTimeSelect selected={dateCf} onChange={date => {\r\n                            setErr(false);\r\n                            setDateCf(date)\r\n                        }} />\r\n                    </div>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                        \r\n                        \r\n                    <Form.Input className=\"date_input other_input\" label=\"Résultat Controle\"  value={resulta_cf} onChange={(e,{value})=>{\r\n                            setErr(false);\r\n                            setresulta_cf(value)\r\n                        }} />\r\n                    <div className=\"date_input\">\r\n                            <label>\r\n                                Date Résultat Cf\r\n                            </label>\r\n                        <DatePicker dateFormat=\"MMMM d, yyyy h:mm aa\" showTimeSelect selected={date_resultat_cf} onChange={date => {\r\n                            setErr(false);\r\n                            setDate_resultat_cf(date)\r\n                        }} />\r\n                    </div>\r\n                    </Form.Group> \r\n                    <Form.Group>\r\n                    <div className=\"date_input\">\r\n                            <label>\r\n                                Date Rejet Cf\r\n                            </label>\r\n                        <DatePicker dateFormat=\"MMMM d, yyyy h:mm aa\" showTimeSelect selected={dateCfRejet} onChange={date => {\r\n                            setErr(false);\r\n                            setDateCfRejet(date)\r\n                        }} />\r\n                    </div>\r\n                    \r\n                    <Form.Radio checked={is_cf_rejet} onClick={()=>{\r\n                        setUNCR(false);\r\n                        setCF(prevState=>!prevState)\r\n                    }} className={is_cf_rejet?\"radio_input active\" :\"radio_input\"} label=\"Rejet pour cf\" />\r\n                    </Form.Group>\r\n                    <div className=\"actions\">\r\n                        <Form.Button content=\"Sauvegarder\" onClick={handleAddControl} />\r\n                    </div>\r\n                    <Message error content=\"Veilleuz ajouter une date de debut avant\" />\r\n                </Form>\r\n            </div>\r\n    )\r\n}\r\nexport default FormCf;\r\n","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossiertTreatment\\FormAff.jsx",["291","292"],"import React,{useEffect,useState} from 'react';\r\nimport { Form,TransitionablePortal,Segment, Icon, Message, Dropdown } from \"semantic-ui-react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport API from '../../API/API.js';\r\nimport ReplaceForNull from \"../../helpers/ReplaceForNull\";\r\n\r\nconst FormAff =(props)=>{\r\n    const {end,dossierId,start} = props;\r\n    const [showSuccess,setShowSuccess] = useState(false);\r\n    const [num_aff,setNumAff] = useState(\"\");\r\n    const [date_resultat_aff,setDate_resultat_aff] = useState(\"\");\r\n    const [dateconformité,setDateconformité] = useState(null);\r\n    const [conformité,setCF] = useState(false)\r\n    const [err,setErr] = useState(false);\r\n    const [dateAff,setDateAff] = useState(null);\r\n    const [caisse,setcaisse] = useState(\"\");\r\n    const [uncr,setUNCR] = useState(true);\r\n    const [resulta_aff,setresulta_aff] = useState(\"\");\r\n    const caisses = [\r\n        {\r\n            key:0,\r\n            value:\"CNAS\",\r\n            text:\"CNAS\"\r\n        },\r\n        {\r\n            key:0,\r\n            value:\"CASNOS\",\r\n            text:\"CASNOS\"\r\n        },\r\n        {\r\n            key:0,\r\n            value:\"CNR\",\r\n            text:\"CNR\"\r\n        },\r\n    ]\r\n\r\n    //? get data to input\r\n    useEffect(()=>{\r\n        API.get(\"/api/dossier/\"+dossierId)\r\n        .then(res=>{\r\n            if (res.data.rejet_cf) setCF(res.data.rejet_cf);\r\n            if (res.data.num_cf) setNumAff(res.data.num_cf);\r\n            if (res.data.date_resultat_cf) setDate_resultat_aff(new Date(res.data.date_resultat_cf));    \r\n            if (res.data.date_rejet_cf) setDateconformité(new Date(res.data.date_rejet_cf));\r\n            if (res.data.date_cf) setDateAff(new Date(res.data.date_cf));\r\n            if (res.data.resultat_cf) setresulta_aff(res.data.resultat_cf);\r\n            if (res.data.caisse) setcaisse(res.data.caisse);\r\n        })\r\n        .catch(err=>{\r\n            console.error(err)\r\n        })\r\n    },[])\r\n\r\n    const handleAddControl = ()=>{\r\n        if (!start){\r\n            setErr(true);\r\n        } else if (!end){\r\n        let body = {};\r\n        if (!uncr) body[\"rejet_cf\"] = conformité;\r\n        if (num_aff.length > 0 ) body[\"num_cf\"] = num_aff;\r\n        if (date_resultat_aff) body[\"date_resultat_cf\"] = date_resultat_aff;\r\n        if (dateconformité) body[\"date_rejet_cf\"] = dateconformité;\r\n        if (dateAff) body[\"date_cf\"] = dateAff;\r\n        if (caisse.length>0) body[\"caisse\"] = caisse;\r\n        if (resulta_aff.length) body[\"resultat_cf\"] = resulta_aff;\r\n        API.post(\"/api/cf_rejet\",{...body,DossierId:dossierId})\r\n        .then(res=>{\r\n            API.put(`/api/dossier/${dossierId}`,body)\r\n            .then(res=>{\r\n                setShowSuccess(true);\r\n                    setTimeout(()=>{\r\n                        setShowSuccess(false)\r\n                        window.location.reload();\r\n                    },2000)\r\n            })\r\n        })\r\n        .catch(err=>{\r\n            console.log(err.response);\r\n        })\r\n        }\r\n    }\r\n\r\n        return (\r\n            <div className=\"form_treat\">\r\n                 <TransitionablePortal\r\n                   open={showSuccess}\r\n                   onClose={()=>{\r\n                    setShowSuccess(false);\r\n                    window.location.reload();\r\n                   }}\r\n               >\r\n                   <Segment className=\"modal-date\"\r\n       >\r\n         <h1>Succès <Icon name=\"check circle\" /> </h1>\r\n         <p>informations ajouté avec succès</p>\r\n       </Segment>\r\n               </TransitionablePortal>\r\n                   \r\n                <Form error={err}>\r\n                <Form.Group>\r\n                        <Form.Input className=\"date_input other_input\" label=\"Numéro Affiliation\"  value={num_aff} onChange={(e,{value})=>{\r\n                            setErr(false);\r\n                            setNumAff(value)\r\n                        }} /> \r\n                        <div className=\"date_input\">\r\n                            <label>\r\n                                Date Affiliation\r\n                            </label>\r\n                        <DatePicker dateFormat=\"MMMM d, yyyy h:mm aa\" showTimeSelect selected={dateAff} onChange={date => {\r\n                            setErr(false);\r\n                            setDateAff(date)\r\n                        }} />\r\n                    </div>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                    <Form.Input className=\"date_input other_input\" label=\"Résultat Affiliation\"  value={resulta_aff} onChange={(e,{value})=>{\r\n                            setErr(false);\r\n                            setresulta_aff(value)\r\n                        }} />\r\n                    <div className=\"date_input\">\r\n                            <label>\r\n                                Date Résultat Affiliation\r\n                            </label>\r\n                        <DatePicker dateFormat=\"MMMM d, yyyy h:mm aa\" showTimeSelect selected={date_resultat_aff} onChange={date => {\r\n                            setErr(false);\r\n                            setDate_resultat_aff(date)\r\n                        }} />\r\n                    </div>\r\n                    </Form.Group> \r\n                    <Form.Group>\r\n                    <div className=\"date_input other_input\">\r\n                            <label>\r\n                            Type De Caisse\r\n                            </label>\r\n                            \r\n                        <Dropdown className=\"dropdown_input_treat\" onChange={(e,{value})=>{\r\n                            setErr(false);\r\n                            setcaisse(value)\r\n                        }} value={caisse} size=\"big\" label=\"Type De Caisse\" selection options={caisses} />\r\n                    </div>\r\n                    <div className=\"date_input\">\r\n                            <label>\r\n                                Date conformité\r\n                            </label>\r\n                        <DatePicker dateFormat=\"MMMM d, yyyy h:mm aa\" showTimeSelect selected={dateconformité} onChange={date => {\r\n                            setErr(false);\r\n                            setDateconformité(date)\r\n                        }} />\r\n                    </div>\r\n                    </Form.Group>\r\n                    <Form.Group>\r\n                    <Form.Radio checked={conformité} onClick={()=>{\r\n                        setUNCR(false);\r\n                        setCF(prevState=>!prevState)\r\n                    }} className={conformité?\"radio_input active\" :\"radio_input\"} label=\"conformité pour affiliaiton\" />\r\n                    </Form.Group>\r\n                    <div className=\"actions\">\r\n                        <Form.Button content=\"Sauvegarder\" onClick={handleAddControl} />\r\n                    </div>\r\n                    <Message error content=\"Veilleuz ajouter une date de debut avant\" />\r\n                </Form>\r\n            </div>\r\n    )\r\n}\r\nexport default FormAff;\r\n","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\AgentDossierTable\\AgentDossierTable.jsx",["293","294","295","296","297"],"import React,{useState,useEffect} from 'react';\r\nimport { Input, Button,Pagination,Table,Icon, Dropdown } from \"semantic-ui-react\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\nimport moment from 'moment'\r\nimport 'moment/locale/fr';  \r\n\r\n//? redux \r\nimport { setLoading } from \"../../actions/loadingAction\";\r\n\r\nimport {ReactComponent as ArrowSvg} from \"../../assets/icons/arrow.svg\";\r\nimport LoadingPage from \"../../screens/Loading/Loading\";\r\nimport API from '../../API/API.js/API.js';\r\n\r\nconst Arrow = (props)=>{\r\n    const {isRight,status,onClick} = props;\r\n\r\n    const handleClick = ()=>{\r\n        if (status){\r\n            onClick(isRight)\r\n        }\r\n    }\r\n    return (\r\n        <div className={isRight?status?\"arrow_ right\":\"arrow_ right gray\":status?\"arrow_ left\":\"arrow_ left gray\"} onClick={handleClick} >\r\n            <ArrowSvg />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AgentDossierTable = (props)=>{\r\n    const {AgentId} = props;\r\n    moment.locale('fr');\r\n    const history = useHistory();\r\n    const [loaded,setLoaded] = useState(false);\r\n    const [data,setData] = useState([]);\r\n    const [searchField,setSearchField] = useState(\"\");\r\n    const [page,setPage] = useState(0);\r\n    const [limit,setLimit] = useState(6);\r\n    const [totalPages,setTotalPages] = useState(null);\r\n    const [isNext,setIsNext] = useState(null);\r\n    const [isPrev,setIsPrev] = useState(null);\r\n    const [searchBtn,setSearchBtn] = useState(false);\r\n    const [loadingBtn,setLoadingBtn] = useState(false);\r\n    const [year,setYear] = useState(null);\r\n    const [promoteur,setPromoteur] = useState(null);\r\n    const [project,setProject] = useState(null);\r\n\r\n    const [projects,setProjects] = useState([]);\r\n    const [promoteurs,setPromoteurs] = useState([]);\r\n\r\n    /* let y = (new Date()).getFullYear() */\r\n    const y = 2020;\r\n    const years = Array.from(new Array(20),( val, index ) => {\r\n\r\n        return (\r\n            {\r\n                key:index,\r\n                value:index + y,\r\n                text:index + y\r\n            }\r\n        )\r\n    });\r\n\r\n    //? get all projects with PromoteurId choosed\r\n    useEffect(()=>{\r\n        const condition = promoteur ? `&PromoteurId=${promoteur}` : ``\r\n        promoteur && promoteur && API.get(`/api/project?limit=9999999999999999999999999999999${condition}`)\r\n        .then(res=> res.data.results.map(project=>{\r\n            setProjects(prevState=>[...prevState,\r\n            {\r\n                key:project.id,\r\n                value:project.intitulé,\r\n                text:project.intitulé\r\n            }\r\n            ])\r\n        }))\r\n        .catch(err=>console.log(err.response))\r\n    },[promoteur]);\r\n\r\n\r\n    //? get all promoteur with year choosed \r\n    useEffect(()=>{\r\n        const condition = year ? `&year=${year}` : ``\r\n\r\n        year && API.get(`/api/promoteur/all?limit=9999999999999999999999999999999${condition}`)\r\n        .then(res=> res.data.results.map(promoteur=>{\r\n            setPromoteurs(prevState=>[...prevState,\r\n            {\r\n                key:promoteur.id,\r\n                value:promoteur.id,\r\n                text:promoteur.first_name+\" \"+promoteur.last_name\r\n            }\r\n            ])\r\n        }))\r\n        .catch(err=>console.log(err.response))\r\n    },[year])\r\n\r\n\r\n    useEffect(()=>{\r\n        setData([]);\r\n        setLoading(true);\r\n        searchBtn && setLoadingBtn(true);\r\n        API.get(`/api/dossier/agent/${AgentId}?size=${limit}&page=${page}&search=${searchField}&ordering=-createdAt`)\r\n        .then(res=>{\r\n            res.data.results.map(dossier=>{\r\n                API.get(`/api/conjoint?PostulantId=${dossier.Postulant.id}`)\r\n                .then(res=>{\r\n                    const conjoints = res.data.results;\r\n                    const condition = project ? `?intitulé=${project}` : ``\r\n                    API.get(`/api/project/${dossier.Liste.ProjectId}${condition}`)\r\n                    .then(res=>{\r\n                        const projectData = res.data;\r\n                        API.get(`/api/promoteur/${promoteur?promoteur:projectData.PromoteurId}`)\r\n                        .then(res=>{\r\n                            const promoteurData = res.data;\r\n                            setData((prevState=>[...prevState,{Conjoint:conjoints,...dossier,Project:projectData,Promoteur:promoteurData}]));\r\n                        })\r\n                        .catch(err=>{\r\n                            console.log(err.response);\r\n                        })\r\n                    })\r\n                    .catch(err=>{\r\n                        console.log(err.response);\r\n                    })\r\n                })\r\n                .catch(err=>{\r\n                        console.log(err.response);\r\n                })\r\n\r\n            })\r\n            setPage(res.data.currentPage);\r\n            setTotalPages(res.data.totalPages);\r\n            if (res.data.count>res.data.currentPage+limit){\r\n                setIsNext(res.data.currentPage+1)\r\n            }else{\r\n                setIsNext(null);\r\n            }\r\n            if (res.data.currentPage === 0){\r\n                setIsPrev(null)\r\n            }else setIsPrev(res.data.currentPage)\r\n            setSearchBtn(false);\r\n            searchBtn && setLoadingBtn(false);\r\n            setTimeout(()=>{\r\n                setLoaded(true);\r\n            },500)\r\n        })\r\n        .catch(err=>{\r\n            searchBtn && setLoadingBtn(false);\r\n            setSearchBtn(false);\r\n            console.log(err.response)\r\n        })\r\n    },[page,searchBtn,AgentId,project]);\r\n\r\n    const handlePagination = (isRight)=>{\r\n          if (isRight){\r\n            setPage(isNext);\r\n          }\r\n          else {\r\n              setPage(isPrev)\r\n          }\r\n    }\r\n    const handlePaginationChange = (e, { activePage })=>{\r\n        setPage(activePage-1)\r\n    }\r\n    const handleInputSearch = (e,{name,value})=>{\r\n        setSearchField(value)\r\n    }\r\n    const handleSearch = ()=>{\r\n        setSearchBtn(true);\r\n    }\r\n    const handleTreatDossier = (dossier)=>{\r\n        history.push({\r\n            pathname:\"/agent/dossier/treat\",\r\n            state:{dossier}\r\n        })\r\n    }\r\n    const handleInfoDossier = (dossier)=>{\r\n        history.push({\r\n            pathname:\"/agent/dossier/info\",\r\n            state:{dossier:dossier}\r\n        })\r\n    }\r\n    return (\r\n        (\r\n            <>\r\n            {\r\n                loaded ?(\r\n                    <div className=\"projet_sip\">\r\n                <div className=\"header_table\">\r\n                    <div className=\"row\">\r\n                        <div className=\"search_part\">\r\n                        <Input name=\"search_input\" value={searchField} onChange={handleInputSearch}  placeholder='Rechercher par Postulant, reférence liste ou commune ...' />\r\n                        <Button loading={loadingBtn} onClick={handleSearch} icon=\"search\" />\r\n                        <div className=\"pagination_part\">\r\n                        <Pagination\r\n                        onPageChange={handlePaginationChange}\r\n                        firstItem={null}\r\n                        lastItem={null}\r\n                        prevItem={{ content: <Arrow status={isPrev} onClick={handlePagination} />, icon: true }}\r\n                        nextItem={{ content: <Arrow status={isNext} isRight onClick={handlePagination} />, icon: true }}\r\n                        activePage={page+1}\r\n                        totalPages={totalPages}\r\n                        boundaryRange={1}\r\n                        siblingRange={0}\r\n                        />\r\n                        </div>\r\n                        <div className=\"filter_dossier\">\r\n                            <Dropdown options={years} selection onChange={(e,{value})=>{\r\n                                setPromoteurs([]);\r\n                                setProjects([]);\r\n                                setYear(value);\r\n                            }} placeholder=\"Année\" />\r\n                            <Dropdown options={promoteurs} selection onChange={(e,{value})=>{\r\n                                setProjects([]);\r\n                                setPromoteur(value);\r\n                            }} placeholder=\"Promoteur\" />\r\n                            <Dropdown options={projects} selection onChange={(e,{value})=>{\r\n                                setProject(value);\r\n                            }} placeholder=\"Intitulé projet\" />\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"table_part\">\r\n                <Table basic>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                        <Table.HeaderCell width={2} className=\"first\">Postulant<Icon  data-name=\"postulant\" /> </Table.HeaderCell>\r\n                        <Table.HeaderCell width={2} className=\"first\">Conjoint<Icon  data-name=\"conjoint\" /> </Table.HeaderCell>\r\n                        <Table.HeaderCell width={2} className=\"first\">Commune<Icon  data-name=\"place_of_bird\" /> </Table.HeaderCell>\r\n                        <Table.HeaderCell width={2} className=\"first\">Situation familiale<Icon  data-name=\"family_situation\" /> </Table.HeaderCell>\r\n                        <Table.HeaderCell width={2} className=\"first\">Réference liste<Icon  data-name=\"ref\" /> </Table.HeaderCell>\r\n                        <Table.HeaderCell width={1} className=\"last\"></Table.HeaderCell>\r\n                        </Table.Row>\r\n                    </Table.Header>\r\n                <Table.Body>\r\n                    {\r\n                        data && data.map((dossier,index)=>\r\n                        {\r\n                            return (\r\n                    <Table.Row key={index}>\r\n                            <Table.Cell>{dossier.Postulant && dossier.Postulant ? `${dossier.Postulant.first_name} ${dossier.Postulant.last_name}` : \"/\"}</Table.Cell>\r\n                            <Table.Cell>{dossier.Conjoint && dossier.Conjoint ? `${dossier.Conjoint[0].first_name} ${dossier.Conjoint[0].last_name}` : \"/\"}</Table.Cell>\r\n                            <Table.Cell>{dossier.Postulant && dossier.Postulant.place_of_birth ? dossier.Postulant.place_of_birth : \"/\"}</Table.Cell>\r\n                                <Table.Cell>{dossier.Postulant && dossier.Postulant.family_situation ? dossier.Postulant.family_situation : \"/\"}</Table.Cell>\r\n                            <Table.Cell>{dossier.Liste && dossier.Liste.ref ? dossier.Liste.ref : \"/\"}</Table.Cell>\r\n                            <Table.Cell>\r\n                                <div className=\"actions_dossier\">\r\n                                    <Button content=\"Voir plus\" color=\"blue\" onClick={()=>handleInfoDossier(dossier)} />\r\n                                    <Button content=\"Crée decision\" color=\"green\" />\r\n                                    <Button content=\"Traiter\" color=\"black\" onClick={()=>handleTreatDossier(dossier)} />\r\n                                </div>\r\n                            </Table.Cell>\r\n                    </Table.Row>\r\n                            )\r\n                        }\r\n                        )\r\n                    }\r\n                </Table.Body>\r\n                </Table>\r\n                </div>\r\n            </div>\r\n            \r\n                )\r\n                :\r\n                (\r\n                    <LoadingPage />\r\n                )\r\n            }\r\n            </>\r\n        )\r\n    )\r\n}\r\nexport default AgentDossierTable;","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\actions\\loadingAction.js",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\types.js",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossierHistoryTreat\\DossierInfo.jsx",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossierHistoryTreat\\VerificationLogs.jsx",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossierHistoryTreat\\RevenueLogs.jsx",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossierHistoryTreat\\AffLogs.jsx",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossierHistoryTreat\\ControleInfo.jsx",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\DossierHistoryTreat\\CfLogs.jsx",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\GeneralTable\\GeneralTable.jsx",["298","299","300"],"import React,{useState,useEffect} from 'react';\r\nimport { Input, Button,Pagination,Table,Icon,Modal } from \"semantic-ui-react\";\r\nimport {useHistory} from \"react-router-dom\"\r\n//? import css\r\nimport \"../ProjectTable/ProjectTable.css\";\r\n\r\nimport {ReactComponent as ArrowSvg} from \"../../assets/icons/arrow.svg\";\r\nimport LoadingPage from \"../../screens/Loading/Loading\";\r\nimport API from '../../API/API.js';\r\n\r\nconst Arrow = (props)=>{\r\n    const {isRight,status,onClick} = props;\r\n\r\n    const handleClick = ()=>{\r\n        if (status){\r\n            onClick(isRight)\r\n        }\r\n    }\r\n    return (\r\n        <div className={isRight?status?\"arrow_ right\":\"arrow_ right gray\":status?\"arrow_ left\":\"arrow_ left gray\"} onClick={handleClick} >\r\n            <ArrowSvg />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst GeneralTable = (props)=>{\r\n    const {url,urlAdd,searchPlaceholder,cols,colsData,addText,action,accounts,no_filter} = props;\r\n    function exampleReducer(state, action) {\r\n        switch (action.type) {\r\n          case 'close':\r\n            return { open: false }\r\n          case 'open':\r\n            return { open: true, size: action.size,is_active:action.is_active, id:action.id }\r\n          default:\r\n            throw new Error('Unsupported action...')\r\n        }\r\n      }\r\n    const [state, dispatch] = React.useReducer(exampleReducer, {\r\n        open: false,\r\n        size: undefined,\r\n        is_active:undefined,\r\n        id: undefined\r\n    })\r\n    const { open, size, is_active,id } = state\r\n    const handleAction = ()=>{\r\n        let body = {\r\n            is_active : !is_active\r\n        }\r\n        API.put(\"/api/agents/\"+id,body)\r\n        .then(res=>{\r\n            window.location.reload();\r\n        })\r\n        .catch(err=>{\r\n            console.log(err.response);\r\n        })\r\n        dispatch({ type: 'close' });\r\n    }\r\n    const history = useHistory();\r\n    const [data,setData] = useState([]);\r\n    const [loaded,setLoaded] = useState(false);\r\n    const [searchField,setSearchField] = useState(\"\");\r\n    const [page,setPage] = useState(0);\r\n    const [limit,setLimit] = useState(6);\r\n    const [totalPages,setTotalPages] = useState(null);\r\n    const [isNext,setIsNext] = useState(null);\r\n    const [isPrev,setIsPrev] = useState(null);\r\n    const [activeItem,setActiveItem] = useState(\"in progress\");\r\n    const [searchBtn,setSearchBtn] = useState(false);\r\n    const [loadingBtn,setLoadingBtn] = useState(false);\r\n\r\n    useEffect(()=>{\r\n        searchBtn && setLoadingBtn(true);\r\n        API.get(`${url}?size=${limit}&page=${page}&search=${searchField}&ordering=-createdAt`)\r\n        .then(res=>{\r\n            console.log(res);\r\n            setData(res.data.results);\r\n            setPage(res.data.currentPage);\r\n            setTotalPages(res.data.totalPages);\r\n            if (res.data.count>res.data.currentPage+limit){\r\n                setIsNext(res.data.currentPage+1)\r\n            }else{\r\n                setIsNext(null);\r\n            }\r\n            if (res.data.currentPage === 0){\r\n                setIsPrev(null)\r\n            }else setIsPrev(res.data.currentPage)\r\n            setSearchBtn(false);\r\n            searchBtn && setLoadingBtn(false);\r\n            setTimeout(()=>{\r\n                setLoaded(true);\r\n            },500)\r\n        })\r\n        .catch(err=>{\r\n            searchBtn && setLoadingBtn(false);\r\n            setSearchBtn(false);\r\n            return history.push('/error')\r\n        })\r\n    },[page,searchBtn])\r\n    const handlePagination = (isRight)=>{\r\n          if (isRight){\r\n            setPage(isNext);\r\n          }\r\n          else {\r\n              setPage(isPrev)\r\n          }\r\n    }\r\n    const handlePaginationChange = (e, { activePage })=>{\r\n        setPage(activePage-1)\r\n    }\r\n    const handleInputSearch = (e,{name,value})=>{\r\n        setSearchField(value)\r\n    }\r\n    const handleSearch = ()=>{\r\n        setSearchBtn(true);\r\n    }\r\n    const handleAddProject = ()=>{\r\n        urlAdd && history.push(urlAdd);\r\n    }\r\n    return (\r\n        <>\r\n        {\r\n            loaded ? (\r\n                <div className=\"projet_sip\">\r\n                <>\r\n                {\r\n                    !no_filter && \r\n                <div className=\"header\">\r\n                <p name=\"in progress\" className={activeItem === \"in progress\" ? \"active\":\"\"} onClick={()=>{}} >En Cours\r\n                    {activeItem === \"in progress\" && <div className=\"active_line\"></div>}\r\n                    </p>\r\n                <p name=\"finished\" className={activeItem === \"finished\" ? \"active\":\"\"} onClick={()=>{}} >Terminés\r\n                {activeItem === \"finished\" && <div className=\"active_line\"></div>}\r\n                </p>\r\n            </div>\r\n                }\r\n                </>\r\n                <div className=\"header_table\">\r\n                    <div className=\"row\">\r\n                        <div className=\"search_part\">\r\n                        <Input icon='search' name=\"search_input\" value={searchField} onChange={handleInputSearch} iconPosition='left' placeholder={searchPlaceholder} />\r\n                        <Button loading={loadingBtn} content=\"Recherche\" onClick={handleSearch} />\r\n                        <div className=\"pagination_part\">\r\n                        <Pagination\r\n                        onPageChange={handlePaginationChange}\r\n                        firstItem={null}\r\n                        lastItem={null}\r\n                        prevItem={{ content: <Arrow status={isPrev} onClick={handlePagination} />, icon: true }}\r\n                        nextItem={{ content: <Arrow status={isNext} isRight onClick={handlePagination} />, icon: true }}\r\n                        activePage={page+1}\r\n                        totalPages={totalPages}\r\n                        boundaryRange={0}\r\n                        siblingRange={0}\r\n                        />\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"search_part inverted\">\r\n                            <Button  content={addText} onClick={handleAddProject} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"table_part\">\r\n                <Table basic>\r\n                    <Table.Header>\r\n                        <Table.Row>\r\n                            <>\r\n                            {\r\n                                cols.map(col=>\r\n                                    <Table.HeaderCell width={col.width} className=\"first\">{col.title}<Icon  data-name={col.name} /> </Table.HeaderCell>\r\n                                    )\r\n                            }\r\n                            <>\r\n                            {\r\n                                action && <Table.HeaderCell width={1} className=\"last\"></Table.HeaderCell>\r\n                            }\r\n                            </>\r\n                            </>\r\n                     </Table.Row>\r\n                    </Table.Header>\r\n                <Table.Body>\r\n                    {\r\n                        data.map((project,index)=>\r\n                        <Table.Row key={index}>\r\n                            <>\r\n                            {\r\n                                colsData.map(colData=>\r\n                                    <Table.Cell>{typeof(project[colData]) === \"boolean\" ? project[colData] ? \"Active\" : \"Non Active\"  : project[colData]}</Table.Cell>\r\n                                    )\r\n                            }\r\n                            <>\r\n                            { action && \r\n                                <Table.Cell>\r\n                                    {accounts && <Button onClick={(e) => {\r\n                                        dispatch({ type: 'open', size: 'tiny',is_active:project[\"is_active\"] ,id:e.currentTarget.attributes[0].nodeValue })\r\n                                    } } content={ project[\"is_active\"] ? \"Bannir\" : \"Activer\"} data-id={project[\"id\"]} className={project[\"is_active\"] ? \"red\":\"orange\" }  />}\r\n                                </Table.Cell>\r\n                            }\r\n                            </>\r\n                            </>\r\n                    </Table.Row>\r\n                        )\r\n                    }\r\n                </Table.Body>\r\n                </Table>\r\n                <>\r\n                {\r\n                    accounts && \r\n                    <Modal\r\n            size={size}\r\n            open={open}\r\n            onClose={() => dispatch({ type: 'close' })}\r\n          >\r\n            <Modal.Header>{is_active ? \"Bannir\":\"Activer\"} le compte </Modal.Header>\r\n            <Modal.Content>\r\n              <p>Vous êtes sur de vouloir continuer votre action</p>\r\n            </Modal.Content>\r\n            <Modal.Actions>\r\n              <Button negative onClick={() => dispatch({ type: 'close' })}>\r\n                Annuler\r\n              </Button>\r\n              <Button positive onClick={handleAction}>\r\n                Confirmer\r\n              </Button>\r\n            </Modal.Actions>\r\n          </Modal>\r\n                }\r\n                </>\r\n                </div>\r\n            </div> \r\n        \r\n            ) : (\r\n                <LoadingPage />\r\n            )\r\n        }\r\n        </>\r\n     )\r\n}\r\nexport default GeneralTable;","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\reducers\\loadingReducer.js",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\components\\FormLogin\\FormLogin.jsx",["301"],"import React,{useState} from 'react';\r\nimport { Form , Checkbox , Button,Image } from \"semantic-ui-react\";\r\nimport { useHistory } from \"react-router-dom\"\r\nimport API from \"../../API/API.js\";\r\n\r\n//? import css\r\nimport \"./FormLogin.css\";\r\n\r\nimport Logo from \"../../assets/logo_cnl.png\"\r\n\r\n//? redux \r\nimport { connect } from \"react-redux\";\r\n\r\nconst FormLogin = (props)=> {\r\n    const {owner} = props;\r\n    //? owner 0 admin\r\n    //? owner 1 agent\r\n    const history = useHistory();\r\n    const [email,setEmail] = useState('');\r\n    const [password,setPassword] = useState('');\r\n    const [emailError,setEmailError] = useState(false);\r\n    const [emailErrorText,setEmailErrorText] = useState(\"\");\r\n    const [passwordError,setPasswordError] = useState(false);\r\n    const [passwordErrorText,setPasswordErrorText] = useState(\"\");\r\n    const [isLoading,setIsLoading] = useState(false);\r\n\r\n    const handleInput = (e,{name,value})=>{\r\n        if (emailError) setEmailError(false);\r\n        if (passwordError) setPasswordError(false);\r\n        switch (name) {\r\n            case \"email\":\r\n                setEmail(value)\r\n                break;\r\n            case \"password\":\r\n                setPassword(value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    console.log({owner})\r\n    const handleLogin = ()=>{\r\n        if (owner === 0){\r\n            loginAdmin()\r\n        }\r\n        else {\r\n            loginAgent()\r\n        }\r\n    }\r\n    const loginAdmin = ()=>{\r\n        setIsLoading(true)\r\n        const data = {\r\n            email,\r\n            password\r\n        }\r\n        API.post(\"/api/auth/login\",data)\r\n        .then(res=>{\r\n            localStorage.setItem(\"token\",res.data.accessToken);\r\n            return history.push(\"/admin\");\r\n        })\r\n        .catch(err=>{\r\n            const errors = err.response;\r\n            setEmailError(true);\r\n            setPasswordError(true);\r\n            errors && setEmailErrorText(errors.data.message);\r\n            errors && setPasswordErrorText(errors.data.message);\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n    const loginAgent = ()=>{\r\n        setIsLoading(true)\r\n        const data = {\r\n            email,\r\n            password\r\n        }\r\n        API.post(\"/api/auth/login\",data)\r\n        .then(res=>{\r\n            localStorage.setItem(\"token\",res.data.accessToken);\r\n            API.get(\"/api/agents/self\")\r\n            .then(res=>{\r\n                const is_active = res.data.is_active;\r\n                const is_admin = res.data.is_admin;\r\n                if (is_admin){\r\n                    setEmailError(true);\r\n                    setPasswordError(true);\r\n                    setEmailErrorText(\"incorrect Email ou mot de passe\");\r\n                    setPasswordErrorText(\"incorrect Email ou mot de passe\");\r\n                    setIsLoading(false)\r\n                }else {\r\n                    if (!is_active){\r\n                        setEmailError(true);\r\n                        setPasswordError(true);\r\n                        setEmailErrorText(\"Compte bannie par l'administrateur\");\r\n                        setPasswordErrorText(\"Compte bannie par l'administrateur\");\r\n                        setIsLoading(false)\r\n                    } else {\r\n                        return history.push(\"/agent/dossier\");\r\n                    }\r\n                }\r\n                \r\n            })\r\n            .catch(err=>{\r\n                console.log(err.response);\r\n            })\r\n        })\r\n        .catch(err=>{\r\n            const errors = err.response;\r\n            setEmailError(true);\r\n            setPasswordError(true);\r\n            errors && setEmailErrorText(errors.data.message);\r\n            errors && setPasswordErrorText(errors.data.message);\r\n            setIsLoading(false)\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"form_login\">\r\n            <div className=\"header\">\r\n                <Image src={Logo} />\r\n                <h3>\r\n                Se connecter\r\n                </h3>\r\n            </div>\r\n            <Form>\r\n                <div style={{\r\n                    position:\"relative\"\r\n                }}>\r\n                <Form.Input icon={emailError?\"info circle\":\"none\"} name=\"email\" value={email} onChange={handleInput} type=\"text\" label=\"Email\" placeholder='email@gmail.com' className={emailError?\"err\":''} />\r\n                    {emailError && <p className=\"err_text\">{emailErrorText}</p>}\r\n                </div>\r\n                <div style={{\r\n                    position:\"relative\"\r\n                }}>\r\n                <Form.Input icon={passwordError?\"info circle\":\"none\"} name=\"password\" value={password} onChange={handleInput} type=\"password\" label=\"Mot de passe\" placeholder='*********' className={passwordError?\"err\":''} />\r\n                    {passwordError&& <p className=\"err_text\">{passwordErrorText}</p>}\r\n                </div>\r\n                <div className=\"actions\" style={{\r\n                    justifyContent:\"center\"\r\n                }} >\r\n                    <Button loading={isLoading} content=\"S'identifier\" onClick={handleLogin} />\r\n                </div>\r\n                <div className=\"help\">\r\n                <p>besoin d'aide ?</p>\r\n                <a href=\"/help\">cliquer ici</a>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nFormLogin.propTypes = {\r\n};\r\nconst mapStateToProps = (state) => ({\r\n    //TODO\r\n});\r\n\r\nexport default connect(mapStateToProps, {  })(FormLogin);","C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\actions\\types.js",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\API\\API.js",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\Utils\\Constants.js",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\helpers\\ReplaceForNull.js",[],"C:\\Users\\oussa\\Desktop\\workspace\\CNL\\client\\src\\helpers\\schemaExcel.js",[],{"ruleId":"302","replacedBy":"303"},{"ruleId":"304","replacedBy":"305"},{"ruleId":"306","severity":1,"message":"307","line":96,"column":7,"nodeType":"308","endLine":96,"endColumn":21,"suggestions":"309"},{"ruleId":"310","severity":1,"message":"311","line":1,"column":24,"nodeType":"312","messageId":"313","endLine":1,"endColumn":33},{"ruleId":"310","severity":1,"message":"314","line":7,"column":11,"nodeType":"312","messageId":"313","endLine":7,"endColumn":18},{"ruleId":"310","severity":1,"message":"315","line":38,"column":18,"nodeType":"312","messageId":"313","endLine":38,"endColumn":26},{"ruleId":"310","severity":1,"message":"316","line":42,"column":12,"nodeType":"312","messageId":"313","endLine":42,"endColumn":22},{"ruleId":"310","severity":1,"message":"317","line":42,"column":23,"nodeType":"312","messageId":"313","endLine":42,"endColumn":36},{"ruleId":"306","severity":1,"message":"318","line":74,"column":7,"nodeType":"308","endLine":74,"endColumn":31,"suggestions":"319"},{"ruleId":"306","severity":1,"message":"320","line":33,"column":7,"nodeType":"308","endLine":33,"endColumn":9,"suggestions":"321"},{"ruleId":"306","severity":1,"message":"322","line":70,"column":7,"nodeType":"308","endLine":70,"endColumn":31,"suggestions":"323"},{"ruleId":"306","severity":1,"message":"324","line":33,"column":7,"nodeType":"308","endLine":33,"endColumn":9,"suggestions":"325"},{"ruleId":"306","severity":1,"message":"307","line":62,"column":7,"nodeType":"308","endLine":62,"endColumn":16,"suggestions":"326"},{"ruleId":"306","severity":1,"message":"307","line":73,"column":7,"nodeType":"308","endLine":73,"endColumn":16,"suggestions":"327"},{"ruleId":"306","severity":1,"message":"307","line":83,"column":7,"nodeType":"308","endLine":83,"endColumn":16,"suggestions":"328"},{"ruleId":"306","severity":1,"message":"307","line":93,"column":7,"nodeType":"308","endLine":93,"endColumn":16,"suggestions":"329"},{"ruleId":"306","severity":1,"message":"307","line":103,"column":7,"nodeType":"308","endLine":103,"endColumn":16,"suggestions":"330"},{"ruleId":"310","severity":1,"message":"331","line":1,"column":15,"nodeType":"312","messageId":"313","endLine":1,"endColumn":23},{"ruleId":"310","severity":1,"message":"332","line":2,"column":22,"nodeType":"312","messageId":"313","endLine":2,"endColumn":27},{"ruleId":"310","severity":1,"message":"333","line":18,"column":12,"nodeType":"312","messageId":"313","endLine":18,"endColumn":18},{"ruleId":"310","severity":1,"message":"334","line":19,"column":21,"nodeType":"312","messageId":"313","endLine":19,"endColumn":32},{"ruleId":"310","severity":1,"message":"335","line":21,"column":11,"nodeType":"312","messageId":"313","endLine":21,"endColumn":23},{"ruleId":"310","severity":1,"message":"315","line":38,"column":18,"nodeType":"312","messageId":"313","endLine":38,"endColumn":26},{"ruleId":"336","severity":1,"message":"337","line":53,"column":49,"nodeType":"338","messageId":"339","endLine":53,"endColumn":51},{"ruleId":"306","severity":1,"message":"318","line":101,"column":7,"nodeType":"308","endLine":101,"endColumn":23,"suggestions":"340"},{"ruleId":"306","severity":1,"message":"341","line":50,"column":7,"nodeType":"308","endLine":50,"endColumn":9,"suggestions":"342"},{"ruleId":"336","severity":1,"message":"337","line":60,"column":30,"nodeType":"338","messageId":"339","endLine":60,"endColumn":32},{"ruleId":"336","severity":1,"message":"337","line":70,"column":43,"nodeType":"338","messageId":"339","endLine":70,"endColumn":45},{"ruleId":"306","severity":1,"message":"343","line":85,"column":7,"nodeType":"308","endLine":85,"endColumn":19,"suggestions":"344"},{"ruleId":"306","severity":1,"message":"307","line":100,"column":7,"nodeType":"308","endLine":100,"endColumn":9,"suggestions":"345"},{"ruleId":"336","severity":1,"message":"337","line":198,"column":33,"nodeType":"338","messageId":"339","endLine":198,"endColumn":35},{"ruleId":"336","severity":1,"message":"337","line":336,"column":65,"nodeType":"338","messageId":"339","endLine":336,"endColumn":67},{"ruleId":"306","severity":1,"message":"346","line":49,"column":7,"nodeType":"308","endLine":49,"endColumn":9,"suggestions":"347"},{"ruleId":"306","severity":1,"message":"346","line":29,"column":7,"nodeType":"308","endLine":29,"endColumn":9,"suggestions":"348"},{"ruleId":"310","severity":1,"message":"349","line":5,"column":8,"nodeType":"312","messageId":"313","endLine":5,"endColumn":22},{"ruleId":"306","severity":1,"message":"346","line":52,"column":7,"nodeType":"308","endLine":52,"endColumn":9,"suggestions":"350"},{"ruleId":"310","severity":1,"message":"349","line":5,"column":8,"nodeType":"312","messageId":"313","endLine":5,"endColumn":22},{"ruleId":"306","severity":1,"message":"346","line":33,"column":7,"nodeType":"308","endLine":33,"endColumn":9,"suggestions":"351"},{"ruleId":"310","severity":1,"message":"349","line":5,"column":8,"nodeType":"312","messageId":"313","endLine":5,"endColumn":22},{"ruleId":"306","severity":1,"message":"346","line":52,"column":7,"nodeType":"308","endLine":52,"endColumn":9,"suggestions":"352"},{"ruleId":"310","severity":1,"message":"315","line":38,"column":18,"nodeType":"312","messageId":"313","endLine":38,"endColumn":26},{"ruleId":"336","severity":1,"message":"337","line":68,"column":49,"nodeType":"338","messageId":"339","endLine":68,"endColumn":51},{"ruleId":"336","severity":1,"message":"337","line":86,"column":51,"nodeType":"338","messageId":"339","endLine":86,"endColumn":53},{"ruleId":"336","severity":1,"message":"337","line":105,"column":41,"nodeType":"338","messageId":"339","endLine":105,"endColumn":43},{"ruleId":"306","severity":1,"message":"353","line":152,"column":7,"nodeType":"308","endLine":152,"endColumn":39,"suggestions":"354"},{"ruleId":"310","severity":1,"message":"315","line":63,"column":18,"nodeType":"312","messageId":"313","endLine":63,"endColumn":26},{"ruleId":"310","severity":1,"message":"317","line":67,"column":23,"nodeType":"312","messageId":"313","endLine":67,"endColumn":36},{"ruleId":"306","severity":1,"message":"355","line":98,"column":7,"nodeType":"308","endLine":98,"endColumn":23,"suggestions":"356"},{"ruleId":"310","severity":1,"message":"357","line":2,"column":17,"nodeType":"312","messageId":"313","endLine":2,"endColumn":25},"no-native-reassign",["358"],"no-negated-in-lhs",["359"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["360"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","'setLimit' is assigned a value but never used.","'activeItem' is assigned a value but never used.","'setActiveItem' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'limit' and 'searchField'. Either include them or remove the dependency array.",["361"],"React Hook useEffect has missing dependencies: 'history' and 'projects'. Either include them or remove the dependency array.",["362"],"React Hook useEffect has a missing dependency: 'searchField'. Either include it or remove the dependency array.",["363"],"React Hook useEffect has missing dependencies: 'history' and 'promoteurs'. Either include them or remove the dependency array.",["364"],["365"],["366"],["367"],["368"],["369"],"'useState' is defined but never used.","'Input' is defined but never used.","'isOpen' is assigned a value but never used.","'setInputRef' is assigned a value but never used.","'handleSearch' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["370"],"React Hook useEffect has missing dependencies: 'history' and 'listes'. Either include them or remove the dependency array.",["371"],"React Hook useEffect has missing dependencies: 'dossierLength' and 'transmition'. Either include them or remove the dependency array.",["372"],["373"],"React Hook useEffect has a missing dependency: 'dossierId'. Either include it or remove the dependency array.",["374"],["375"],"'ReplaceForNull' is defined but never used.",["376"],["377"],["378"],"React Hook useEffect has missing dependencies: 'limit', 'promoteur', and 'searchField'. Either include them or remove the dependency array.",["379"],"React Hook useEffect has missing dependencies: 'history', 'limit', 'searchField', and 'url'. Either include them or remove the dependency array.",["380"],"'Checkbox' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"381","fix":"382"},{"desc":"383","fix":"384"},{"desc":"385","fix":"386"},{"desc":"387","fix":"388"},{"desc":"389","fix":"390"},{"desc":"391","fix":"392"},{"desc":"391","fix":"393"},{"desc":"391","fix":"394"},{"desc":"391","fix":"395"},{"desc":"391","fix":"396"},{"desc":"397","fix":"398"},{"desc":"399","fix":"400"},{"desc":"401","fix":"402"},{"desc":"403","fix":"404"},{"desc":"405","fix":"406"},{"desc":"405","fix":"407"},{"desc":"405","fix":"408"},{"desc":"405","fix":"409"},{"desc":"405","fix":"410"},{"desc":"411","fix":"412"},{"desc":"413","fix":"414"},"Update the dependencies array to be: [code, dossier, history]",{"range":"415","text":"416"},"Update the dependencies array to be: [page, searchBtn, history, limit, searchField]",{"range":"417","text":"418"},"Update the dependencies array to be: [history, projects]",{"range":"419","text":"420"},"Update the dependencies array to be: [page, searchBtn, history, searchField]",{"range":"421","text":"422"},"Update the dependencies array to be: [history, promoteurs]",{"range":"423","text":"424"},"Update the dependencies array to be: [dossier, history]",{"range":"425","text":"426"},{"range":"427","text":"426"},{"range":"428","text":"426"},{"range":"429","text":"426"},{"range":"430","text":"426"},"Update the dependencies array to be: [limit, page, searchBtn, searchField]",{"range":"431","text":"432"},"Update the dependencies array to be: [history, listes]",{"range":"433","text":"434"},"Update the dependencies array to be: [dossierLength, dossiersId, transmition]",{"range":"435","text":"436"},"Update the dependencies array to be: [history]",{"range":"437","text":"438"},"Update the dependencies array to be: [dossierId]",{"range":"439","text":"440"},{"range":"441","text":"440"},{"range":"442","text":"440"},{"range":"443","text":"440"},{"range":"444","text":"440"},"Update the dependencies array to be: [page, searchBtn, AgentId, project, limit, searchField, promoteur]",{"range":"445","text":"446"},"Update the dependencies array to be: [history, limit, page, searchBtn, searchField, url]",{"range":"447","text":"448"},[3276,3290],"[code, dossier, history]",[2543,2567],"[page, searchBtn, history, limit, searchField]",[1223,1225],"[history, projects]",[2454,2478],"[page, searchBtn, history, searchField]",[1244,1246],"[history, promoteurs]",[2536,2545],"[dossier, history]",[2879,2888],[3221,3230],[3552,3561],[3889,3898],[3660,3676],"[limit, page, searchBtn, searchField]",[1846,1848],"[history, listes]",[3116,3128],"[dossierLength, dossiersId, transmition]",[3531,3533],"[history]",[2439,2441],"[dossierId]",[1268,1270],[2022,2024],[1477,1479],[1933,1935],[5466,5498],"[page, searchBtn, AgentId, project, limit, searchField, promoteur]",[3422,3438],"[history, limit, page, searchBtn, searchField, url]"]